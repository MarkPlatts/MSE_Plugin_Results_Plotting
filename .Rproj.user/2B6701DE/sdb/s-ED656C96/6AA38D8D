{
    "collab_server" : "",
    "contents" : "plot_type = function(type2plot) {\n  \n  setwd(\"C:/Users/Mark/Desktop/MSE_Plugin_Results_Plotting/\")\n  source(\"initialisation.R\")\n  source(\"B_Trajectories.R\")\n  source(\"F_Trajectories.R\")\n  source(\"Value_Trajectories.R\")\n  source(\"Effort_Trajectories.R\")\n  source(\"ChokePie.R\")\n  source(\"HighestValuePie.R\")\n  source(\"plot_tools.R\")\n  source(\"share_tools.R\")\n  \n  params = initialise_params()\n\n  create.plot.dirs(params)\n  \n  if(type2plot==1){\n    params$MORT_HCRF_Cons <- T;  if(params$MORT_HCRF_Cons) {setwd(\"HCRF_Cons\");params$YLAB<-\"F\";print(\"Plotting MORT_HCRF_Cons\")} # what are these?\n  }\n  if(type2plot==2){\n    params$MORT_HCRF_Targ<- T;   if(params$MORT_HCRF_Targ) {setwd(\"HCRF_Targ\");params$YLAB<-\"F\";print(\"Plotting HCRF_Targ\")} # what are these?\n  }\n  if(type2plot==3){\n    params$QUOTA_HCRF_Cons<- T;  if(params$QUOTA_HCRF_Cons) {setwd(\"HCRQuota_Cons\");params$YLAB<-\"t/km2\";print(\"Plotting HCRQuota_Cons\")} # what are these?\n  }\n  if(type2plot==4){\n    params$QUOTA_HCRF_Targ<- T;  if(params$QUOTA_HCRF_Targ) {setwd(\"HCRQuota_Targ\");params$YLAB<-\"t\";print(\"Plotting HCRQuota_Targ\")} # what are these?\n  }\n  if(type2plot==5){\n    params$MORT_REAL_LandF <- T; if(params$MORT_REAL_LandF) {setwd(\"RealisedLandedF\");params$YLAB<-\"F\";print(\"Plotting MORT_REAL_LandF\")}\n  }\n  if(type2plot==6){\n    params$MORT_REAL_DiscF <- T; if(params$MORT_REAL_DiscF) {setwd(\"RealisedDiscardedF\");params$YLAB<-\"F\";print(\"Plotting MORT_REAL_DiscF\")}\n  }\n  if(type2plot==7){\n    params$MORT_REAL_F <- T;     if(params$MORT_REAL_F) {setwd(\"RealisedF\");params$YLAB<-\"F\";print(\"Plotting MORT_REAL_F\")}\n  }\n  if(type2plot==8){\n    params$CATCH <-T;    if(params$CATCH) {setwd(\"CatchTrajectories\"); params$YLAB<-\"catch (t/year)\";print(\"Plotting CATCH\")}\n  }\n  if(type2plot==9){\n    params$LANDING <- T; if(params$LANDING) {setwd(\"LandingsTrajectories\"); params$YLAB<-\"landings (t/year)\";print(\"Plotting LANDING\")}\n  }\n  if(type2plot==10){\n    params$DISCARD <- T; if(params$DISCARD) {setwd(\"DiscardsTrajectories\"); params$YLAB<-\"discards (t/year)\";print(\"Plotting DISCARD\")}\n  }\n  \n  if(type2plot==11){\n    params$EFFORT <-T;print(\"Plotting EFFORT\")\n  }\n  if(type2plot==12){\n    params$VALUE <- T;print(\"Plotting VALUE\")\n  }\n  if(type2plot==13){\n    params$BIOMASS <-T;print(\"Plotting BIOMASS\")\n  }\n  \n  if(type2plot==14){\n    params$HIGHEST_VALUE <- T;print(\"Plotting HIGHEST_VALUE\")\n  }\n  if(type2plot==15){\n    params$CHOKE_GROUPS <- T;print(\"Plotting CHOKE_GROUPS\")\n  }\n  \n  if(type2plot==16){\n    params$AverageQuota_EachFleet<- T;  setwd(\"AverageQuota_EachFleet\");params$YLAB<-\"t\";print(\"Plotting AverageQuota_EachFleet\")}\n  }\n  \n  if (params$COMPARE_STRATEGIES){\n    print(params$strats)\n    print(\"\")\n    strat1 <- readline(prompt=\"Select by vector index the 1st Strategy you want to compare:\")\n    strat2 <- readline(prompt=\"Select by vector index the 2nd Strategy you want to compare:\")\n    strat1name = strat[strtoi(strat1)]\n    strat2name = strat[strtoi(strat2)]\n    print(strat1name)\n    print(strat2name)\n    print(\"Comparing for groups: \")\n    print(params$Groups2Plot)\n    print(\"Compare for fleets: \")\n    print(params$Fleets2Plot)\n  }\n  \n  ###F Trajectories\n  #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  \n  if(any(params$MORT_REAL_F,params$MORT_REAL_LandF,params$MORT_REAL_DiscF,params$MORT_HCRF_Cons,params$MORT_HCRF_Targ,params$QUOTA_HCRF_Cons,params$QUOTA_HCRF_Targ,params$CATCH,params$DISCARD,params$LANDING)) plot_fishing_trajectories(params)\n  \n  ###Biomass trajectoreis\n  #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  \n  if (params$BIOMASS) plot_biomass_trajectories(params)\n  \n  ###Value trajectories\n  #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  \n  if (params$VALUE) plot_value_trajectories(params)\n  \n  ###Effort trajectories\n  #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  \n  if (params$EFFORT) plot_effort_trajectories(params)\n\n  ###HIGHEST_VALUE Pie chart\n  #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  if(params$HIGHEST_VALUE) plot_highestvalue_pies(params)\n  \n  ###CHOKE SPECIES Pie chart\n  #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  if(params$CHOKE_GROUPS) plot_choke_pies(params)\n\n  ###Plot average target quota across a regulation type and models\n  #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  if(params$AverageQuota_EachFleet) plot_average_quotas(params)\n  \n\nfor(iplot in c(16)){\n  print(paste(\"Currently plotting type\", iplot))\n  plot_type(iplot)\n}\n",
    "created" : 1478613086716.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2505758188",
    "id" : "6AA38D8D",
    "lastKnownWriteTime" : 1481723852,
    "last_content_update" : 1481723852619,
    "path" : "C:/Users/Mark/Desktop/MSE_Plugin_Results_Plotting/plotting 15July_2016_ChokeHighestValue_byFleet - Refactor.R",
    "project_path" : "plotting 15July_2016_ChokeHighestValue_byFleet - Refactor.R",
    "properties" : {
        "source_window_id" : ""
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}