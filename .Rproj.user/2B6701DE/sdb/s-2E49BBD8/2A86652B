{
    "collab_server" : "",
    "contents" : "# INITIALISATION START ===============================================================================================\n\n#start with a clean sheet\nrm(list = ls())\n\n#load sources\nsource.folder.location = dirname(sys.frame(1)$ofile)\nsetwd(source.folder.location)\nsource(\"share_tools.R\")\n\n#root results path\nroot.plot =     \"C:/Users/Mark/Dropbox/GAP2_MSE Plugin2/North Sea MultiAnnual Plan/ResultsType1-4_220117/Plots/\"\nroot.results =  \"C:/Users/Mark/Dropbox/GAP2_MSE Plugin2/North Sea MultiAnnual Plan/ResultsType1-4_220117/Results/\"\n\nhcr.folders = c(\"C:/Users/Mark/Dropbox/GAP2_MSE Plugin2/NorthSea Model/2015 FINAL Key Run/DATA/HCRs/Type1_BmsytoZero\",\n                \"C:/Users/Mark/Dropbox/GAP2_MSE Plugin2/NorthSea Model/2015 FINAL Key Run/DATA/HCRs/Type2_BmsyBlimClifftoZero\",\n                \"C:/Users/Mark/Dropbox/GAP2_MSE Plugin2/NorthSea Model/2015 FINAL Key Run/DATA/HCRs/Type3_BmsytoZeroatBlim\",\n                \"C:/Users/Mark/Dropbox/GAP2_MSE Plugin2/NorthSea Model/2015 FINAL Key Run/DATA/HCRs/Type4_BmsyBlimClifftoFmin\")\n\ngroups.for.f.or.biomass = \"biomass\"\n\n# INITIALISATION END ===============================================================================================\n\n\n\n# FUNCTION START  ===============================================================================================\n\nCreatePercentBelowConservationLimits = function(BLimitType){\n\n\n  #get a list of hcrs by listed by strategy and group name with only biomass limits\n  strategies.table = getStrategyTable(hcr.folders)\n  strategies.table = filter(strategies.table, Target_or_Conservation==1)\n  strategies.table = strategies.table[,.(StrategyName, GroupNameForBiomass, Limit = get(BLimitType))]#, StepBiomass, UpperLimit)]\n  strategies.table = unique(strategies.table)\n  \n  #get a list of all the groups\n  unique.groups = unique(strategies.table$GroupNameForBiomass)\n\n  #Create a data.table in which to compile all the tables from each file ready for saving to csv\n  dt.all = data.table()\n  \n  for(igroup in unique.groups)\n  {\n    \n    #get a list of all the files in CatchTrajectories that are for \"AllFleets\"\n    biomass.file = GetFileName_ContainsStrings(FolderPath = paste(root.results, \"/Biomass/\", sep=\"\"),\n                                               Strings = c(igroup), WithPath=T)\n    \n    #Load the file\n    biomass = fread(biomass.file, skip=7, header=T)\n    \n    #Sum last 5 year\n    biomass = calcLast5Year(biomass, \"biomass.last5yearsum\", 4, function.type = 2)\n\n    #add a column with the group name - need this to merge with the strategy data.table\n    biomass = appendVariableToDataTable(dt=biomass, variable=igroup, variablename=\"GroupNameForBiomass\", beg=TRUE, end=FALSE)\n\n    #merge the two together so that we can easily calculate the difference between two columns\n    dt = merge(x=biomass, y=strategies.table, by = c(\"StrategyName\", \"GroupNameForBiomass\"), all.x = TRUE)\n\n    dt = dt[Limit!=\"NA\"]\n    dt = cbind(dt, data.table(avbiomass.hcr.limit.diff = dt[,biomass.last5yearsum] - dt[,Limit]))\n    \n    #Check where the catch is greater than or less than the quota\n    dt[, \"avbiomass.greaterthan.hcr.upperlimit.diff\"] = dt$avbiomass.hcr.limit.diff>=0\n    dt[, \"avbiomass.lessthan.hcr.upperlimit.diff\"] = dt$avbiomass.hcr.limit.diff<0\n    \n    #For each strategy count how many models with realisedFs above and below maxFs and merge them together\n    NumberAbove = dt[,.(NumberAbove=sum(avbiomass.greaterthan.hcr.upperlimit.diff)), by=.(StrategyName)]\n    NumberBelow = dt[,.(NumberBelow=sum(avbiomass.lessthan.hcr.upperlimit.diff)), by=.(StrategyName)]\n    dt.counts.temp = merge(NumberAbove,NumberBelow, by = c(\"StrategyName\"))\n    \n    #Create new column that turns the counts into percentages\n    dt.counts.temp$PercentAbove = dt.counts.temp$NumberAbove/(dt.counts.temp$NumberAbove+dt.counts.temp$NumberBelow)*100\n    dt.counts.temp$PercentBelow = dt.counts.temp$NumberBelow/(dt.counts.temp$NumberAbove+dt.counts.temp$NumberBelow)*100\n    \n    #add column with groupname to differentiate after binding\n    dt.counts.temp = cbind(data.table(GroupName = rep(igroup, dim(dt.counts.temp)[1])), dt.counts.temp) \n    \n    #bind them all together ready to be saved to csv\n    dt.all = rbind(dt.all, dt.counts.temp)\n    \n  }\n  \n  #finally save the table to csv\n  write.csv(dt.all, paste(root.plot, \"Tables/Percentage_ConservationSpecies_Above_Below_B_\",BLimitType ,\".csv\", sep=\"\"))\n}\n\n# FUNCTION END  ===============================================================================================\n\n\n\n# FUNCTION CALLS START ===============================================================================================\n\nCreatePercentBelowConservationLimits(\"LowerLimit\")\nCreatePercentBelowConservationLimits(\"UpperLimit\")\n\n# FUNCTION CALLS END ===============================================================================================\n\n\n\n# TESTING START ===================================================================================================\n\nif(FALSE){\n  \n  print(getStrategyTable(hcr.folders))\n  \n}\n\n# TESTING END ===================================================================================================",
    "created" : 1488551637416.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3869970562",
    "id" : "2A86652B",
    "lastKnownWriteTime" : 1488706366,
    "last_content_update" : 1488706366503,
    "path" : "C:/Users/Mark/Desktop/MSE_Plugin_Results_Plotting/ConservationSpecies.R",
    "project_path" : "ConservationSpecies.R",
    "properties" : {
        "source_window_id" : "",
        "tempName" : "Untitled1"
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}