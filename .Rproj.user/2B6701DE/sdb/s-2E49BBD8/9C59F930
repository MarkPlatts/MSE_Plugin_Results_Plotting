{
    "collab_server" : "",
    "contents" : "# INITIALISATION START ===============================================================================================\n\nrm(list = ls())\n\nsource(\"share_tools.R\")\n\n#root results path\nroot.plot = \"C:/Users/Mark/Dropbox/GAP2_MSE Plugin2/North Sea MultiAnnual Plan/ResultsType1-4_220117/Plots/\"\nroot.results = \"C:/Users/Mark/Dropbox/GAP2_MSE Plugin2/North Sea MultiAnnual Plan/ResultsType1-4_220117/Results/\"\n\n# INITIALISATION END ===============================================================================================\n\n\n# FUNCTION START ===============================================================================================\n\nCountTimestepsFile = function(igroup, resultfolder, ncols_no_vals){\n  file.name = GetFileName_ContainsStrings(FolderPath = paste(root.results,\"CatchTrajectories/\", sep=\"\"), \n                                          Strings = c(\"AllFleets\", igroup), WithPath=T)\n  nTimeStepsInData = countColsWithVals(file.name = file.name, ncols_no_vals = 5, lines.to.skip = 7)\n  return(nTimeStepsInData)\n}\n\n# FUNCTION END ===============================================================================================\n\n\n\n# SCRIPT START  ===============================================================================================\nif(TRUE){\n  \n  #get a list of all the groups\n  unique.groups = LoadUniqueGroups(root.results)\n  \n  #Create a data.table in which to compile all the tables from each file ready for saving to csv\n  dt.all = data.table()\n  \n  #Find out how many years\n  nTimeStepsInData = CountTimestepsFile(igroup = unique.groups[1], resultfolder = \"CatchTrajectories\", ncols_no_vals = 5)\n\n  for(igroup in unique.groups)\n  {\n    print(igroup)\n\n    #get file in CatchTrajectories folder that are for \"AllFleets\" and current igroup\n    catches.file = GetFileName_ContainsStrings(FolderPath = paste(root.results, \"/CatchTrajectories/\", sep=\"\"), \n                                               Strings = c(\"AllFleets\", igroup), WithPath=T)\n    \n    catches = fread(catches.file, skip=7, header=T)\n\n    #Determine file is valid\n    #if(!isNotAll(dt = catches, col.data.starts = 6, val.to.check=-9999)) next\n    if(!isNotAll(dt = catches, col.data.starts = 6, val.to.check=0)) next\n#if (igroup==\"Spurdog\") browser()\n    #load the catches at the first and last timestep of the forecast\n    catch.first.year = GetiYearCatch(catches, iYear=1, ncols.before.timeseries=5)\n    catch.last.year = GetiYearCatch(catches, iYear=nTimeStepsInData, ncols.before.timeseries=5)\n    dt = merge(catch.first.year, catch.last.year, by = names(catch.first.year)[1:5])\n\n    #merge the two together so that we can easily calculate the difference between two columns\n    dt$Ratios = dt$Year20/dt$Year1\n    \n    #bind them all together ready to be saved to csv\n    dt.all = rbind(dt.all, dt)\n    \n  }\n  \n  catch.ratio.summary.by.strategy = dt.all[,list(Min = min(Ratios), \n                                             LQ = quantile(Ratios, .25, na.rm=TRUE), \n                                             Median = median(Ratios),\n                                             UQ = quantile(Ratios, .75, na.rm=TRUE),\n                                             Max = max(Ratios),\n                                             Mean = mean(Ratios)), by=c(\"StrategyName\", \"GroupName\")]\n\n  #finally save the table to csv\n  write.csv(catch.ratio.summary.by.strategy, paste(root.plot, \"Tables/Catch_Ratios.csv\", sep=\"\"))\n  \n}\n\n\n# SCRIPT END  ===============================================================================================",
    "created" : 1488626293673.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "399793170",
    "id" : "9C59F930",
    "lastKnownWriteTime" : 1488716429,
    "last_content_update" : 1488716429996,
    "path" : "C:/Users/Mark/Desktop/MSE_Plugin_Results_Plotting/Calc_Catch_Start_End_Ratio.R",
    "project_path" : "Calc_Catch_Start_End_Ratio.R",
    "properties" : {
        "source_window_id" : "",
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}