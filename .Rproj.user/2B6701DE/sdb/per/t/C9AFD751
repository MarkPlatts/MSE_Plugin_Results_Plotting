{
    "collab_server" : "",
    "contents" : "initialise_plotting_params = function(folder_name, params){\n  #init plotting params\n  plotting_params = list()\n  \n  #Create a vector of x vals at either yearly or monthly intervals\n  plotting_params$TimeStepVals = get_timestep_vals(params$plot_each_timestep, params$StartRun_Year, params$EndRun_Year)\n  \n  #reset the director\n  #setwd(paste(params$RootPath,\"\\\\\",folder_name, sep=''))\n  \n  #get a list of all the files in the Biomass folder\n  plotting_params$g <- list.files(paste(params$RootPath,\"\\\\\",folder_name, sep=''))\n  \n  return(plotting_params)\n}\n\n\n# calculating the upper and lower confidence intervals and median ---------\ncalc_vals_for_plotting = function(params, plotting_params){\n  \n  plotting_params$MDNS<- plotting_params$LOWS<- plotting_params$UPPS<- plotting_params$MEANS<- data.frame(year=plotting_params$TimeStepVals,row.names =plotting_params$TimeStepVals)\n  for(strat_i in 1:length(params$strats)){\n\n    STRAT<-paste(params$strats[strat_i],sep=' ')\n    \n    #select subset of data\n    data2plot<- plotting_params$dat[plotting_params$dat$Strategy %in% STRAT,5:ncol(plotting_params$dat)]\n    \n    #quantiles for polygon plot\n    perc<-apply(data2plot,2, FUN=function(x){quantile(x,probs=c(0.025,0.5,0.975),na.rm=T)})\n    perc<-rbind(perc, apply(data2plot,2, FUN=mean) )\n    \n    #save percs\n    plotting_params$LOWS<- cbind(plotting_params$LOWS,perc[1,]);   names(plotting_params$LOWS)[ncol(plotting_params$LOWS)]<-STRAT\n    plotting_params$MDNS<- cbind(plotting_params$MDNS,perc[2,]);   names(plotting_params$MDNS)[ncol(plotting_params$MDNS)]<-STRAT\n    plotting_params$UPPS<- cbind(plotting_params$UPPS,perc[3,]);   names(plotting_params$UPPS)[ncol(plotting_params$UPPS)]<-STRAT\n    plotting_params$MEANS<- cbind(plotting_params$MEANS,perc[4,]); names(plotting_params$MEANS)[ncol(plotting_params$MEANS)]<-STRAT\n\n  }\n  \n  return(plotting_params)\n  \n}\n\n\n# Calculate all the x-values for plotting ---------------------------------\n\nget_timestep_vals = function(plotmonthly, start_year, end_year){\n  if (plotmonthly){\n    xvals=seq(start_year,end_year-1/12,1/12)\n  } else {\n    xvals = start_year:(end_year-1)\n  }\n}\n\n\n\n#Checks whether the filename given is incorrect given setting to either plot yearly or none yearly values\nIsIncorrectFileType_YearlyMonthly = function(FileName, plot_yearly){\n  \n  \n  if(length(grep(\"Yearly\", FileName, fixed=TRUE))>0 & !plot_yearly) return(TRUE)\n  if(length(grep(\"Yearly\", FileName, fixed=TRUE))==0 & plot_yearly) return(TRUE)\n  return(FALSE)\n\n}\n\n\n\nFileIsForACompareGroup = function(params, FILENAME){\n  nNotGroups2Compare=0\n  for (igroup in params$Groups2Plot){\n    if(!length(grep(igroup,FILENAME, fixed=TRUE))>0) nNotGroups2Compare = nNotGroups2Compare+1\n  }\n  if(length(params$Groups2Plot)==nNotGroups2Compare) {\n    return(FALSE)\n  } else {\n    return(TRUE)\n  }\n}\n\nFileIsForACompareGroupFleet = function(params, FILENAME){\n  FILENAME = paste(FILENAME,\".csv\", sep=\"\")\n  for (igroup in params$Groups2Plot){\n    if(length(grep(igroup,FILENAME, fixed=TRUE))>0) {\n      for (iFleet in params$Fleets2Plot){\n        if(iFleet==\"AllFleets\" && length(grep(\"AllFleets\",FILENAME, fixed=TRUE))>0) {\n          #browser()\n          return (TRUE)\n        }\n        if(length(grep(paste(iFleet,\".csv\", sep=''),FILENAME, fixed=TRUE))>0) {\n          #browser()\n          return (TRUE)\n        }\n      }\n    }\n  }\n  return (FALSE)\n}\n\n",
    "created" : 1478617577136.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2023430512",
    "id" : "C9AFD751",
    "lastKnownWriteTime" : 1480689869,
    "last_content_update" : 1480689869659,
    "path" : "C:/Users/Mark/Desktop/MSE_Plugin_Results_Plotting/share_tools.R",
    "project_path" : "share_tools.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}