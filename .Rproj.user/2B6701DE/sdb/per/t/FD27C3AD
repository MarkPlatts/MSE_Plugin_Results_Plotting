{
    "collab_server" : "",
    "contents" : "source(\"C:/Users/Mark/Dropbox/GAP2_MSE Plugin2/R Code/Plotting Trajectories post Jan 2016/Plotting_Trajectores_Project_2016/share_tools.R\")\n\n###Value Trajectories\n#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nplot_value_trajectories <- function(params){\n  setwd(paste(params$RootPath,\"\\\\ValueTrajectories\", sep=''))\n  \n  g <- list.files()     # which groups are there?\n  gnum <- 2    #g[6] is \"Cod (adult)_GroupNo14.csv\"\n  FILENAME <- substr(g[gnum],1,nchar(g[gnum])-4)\n  \n  groupdat <- read.csv(g[gnum],skip=6, head=T)\n  \n  #nyrs <- (ncol(groupdat)-5)/12 # num yrs\n  #Start <- params$StartProjection_Year\n  #End <- params$EndRun_Year\n  \n  #groupdat <- effort[effort$FleetName == GROUP,c(1,3:ncol(effort))]\n  \n  #Create a vector of x vals at either yearly or monthly intervals\n  TimeStepVals = get_timestep_vals(params$plot_each_timestep, params$StartProjection_Year, params$EndRun_Year)\n  \n  COL = rep(1:8,10)[1:length(params$strat)]\n  LTY<- c(rep(1,8),rep(2,8),rep(3,8),rep(4,8),rep(5,8),rep(6,8))[1:length(params$strat)] #LTY[1:6] <- COL[6:1]\n  \n  WRITE<-F\n  SUMMARYPLOT<-T\n  SAVE<-T\n  SAVE_ONLY_SUMMARY<-F\n  \n  LEGEND<-T\n  \n  ###Fleet Trajectories\n  \n  for (G in g){\n    \n    #Get the filename to be used to check whether yearly in name, to name files of plots and to add text to plots\n    FILENAME = substr(G,1,nchar(G)-4)\n    \n    #Check whether we should plot the yearly files or the monthly files\n    if(IsIncorrectFileType_YearlyMonthly(FILENAME, params$Plot_yearly_files)) next\n    \n    #Checks whether the fleet is designated to be plotted\n    DontPlot = TRUE\n    for(iFleet in params$Fleets2Plot){\n      if (length(grep(paste(iFleet,\".csv\", sep=''), G, fixed=TRUE))==1) {\n        DontPlot=FALSE\n        break\n      }\n    }\n    if (DontPlot==TRUE) next\n    \n    #Checks whether the group is designated to be plotted\n    DontPlot = TRUE\n    for(iGroup in params$Groups2Plot){\n      if (length(grep(paste(iGroup,\"_\", sep=''), G, fixed=TRUE))==1) {\n        DontPlot=FALSE\n        break\n      }\n    }\n    if (DontPlot==TRUE) next\n    \n    groupdat<-read.csv(G,skip=6, head=T)\n    FLEET<- as.character(unique(groupdat$FleetName))\n    \n    #timeseries of FLEET effort by FleetNumber 1:12 for the 10 strategies\n    if (!params$plot_each_timestep && !params$Plot_yearly_files) groupdat<-groupdat[,c(1:5,5+seq(1,params$Projected_NYears*12,12))] \n    if (params$plot_each_timestep && !params$Plot_yearly_files) groupdat<-groupdat[,c(1:5,5+seq(1,params$Projected_NYears*12,1))] \n    \n    names(groupdat)[names(groupdat)==\"StrategyName\"]  <- \"Strategy\"\n    \n    graphics.off()\n    \n    #par(mfrow=c(3,4),mar=c(2,2,4,2),oma=c(1,1,3,1))\n    \n    if(length(grep(\"Yearly\", G, fixed=TRUE))==1 & !params$Plot_yearly_files) next\n    if(length(grep(\"Shellfish\",G, fixed=TRUE))==1 & !params$Plot_yearly_files) next\n    \n\n    PERCS<-MDNS<- LOWS<- UPPS<- MEANS<- data.frame(year=TimeStepVals,row.names =TimeStepVals)\n    if(!SUMMARYPLOT) par(mfrow=c(3,4),mar=c(2,2,4,1),oma=c(1,1,3,1))\n    if(SAVE_ONLY_SUMMARY) par(mfrow=c(2,1),mar=c(1,4,3,1),oma=c(1,1,3,1))\n    \n    if (SAVE) {\n      if(!params$COMPARE_STRATEGIES) {\n        png(filename = paste(plot.path, \"\\\\OUTPUT_GEARSGROUPSbySTRATEGIES\\\\\",FILENAME,\"_PERCS.png\",sep=\"\"), res=900, width=8, height=4, units='in')\n      } else {\n        png(filename = paste(plot.path,\"\\\\OUTPUT_COMPARE_STRATS\\\\\",FILENAME,\"_COMP.png\",sep=\"\"), res=900, width=8, height=4, units='in')\n      }\n    }\n    \n    \n    for(strat_i in 1:length(params$strats)){\n      \n      STRAT<-paste(params$strats[strat_i],sep=' ')\n      \n      #if comparing 2 strategies and this strategy is neither move skip to next strategy in loop\n      if(params$COMPARE_STRATEGIES){\n        if(strat1name!=STRAT && strat2name!=STRAT) next\n      }\n      \n      #select subset of data\n      data2plot<- groupdat[groupdat$Strategy %in% STRAT,6:ncol(groupdat)]*570000\n      \n      #quantiles for polygon plot\n      perc<-apply(data2plot,2, FUN=function(x){quantile(x,probs=c(0.025,0.5,0.975),na.rm=T)})\n      #for(i in 1:2) lines(params$StartProjection_Year:End,perc[i,],lwd=4,col='dark blue',lty=1) \n      perc<-rbind(perc, apply(data2plot,2, FUN=mean) )\n      \n      #           if(!SUMMARYPLOT){#do all\n      #             #grey poly\n      #             if(strat_i==1) YMAX<- 1.25*(max(perc))\n      #             plot(params$params$StartProjection_YearRun_Year:(params$EndRun_Year-1),perc[4,],type='l',lwd=2,ylim=c(0,YMAX),\n      #                  main=STRAT,xlab='years',ylab=\"relative effort (mean)\")\n      #             polygon(c(params$StartRun_Year:(params$EndRun_Year-1),params$StartRun_Year:(params$EndRun_Year-1)), c(perc[1,],perc[3,ncol(perc):1]),\n      #                     col=c(\"grey\"), border=c(\"grey\"), lwd=1, lty=c(\"solid\"))\n      #             # add heavy mean line\n      #             lines(params$StartRun_Year:(params$EndRun_Year-1),perc[4,],lwd=2,col=COL[strat_i],lty=LTY[strat_i])\n      #           }\n      \n      #save percs\n      LOWS<- cbind(LOWS,perc[1,]);   names(LOWS)[ncol(LOWS)]<-STRAT\n      MDNS<- cbind(MDNS,perc[2,]);   names(MDNS)[ncol(MDNS)]<-STRAT\n      UPPS<- cbind(UPPS,perc[3,]);   names(UPPS)[ncol(UPPS)]<-STRAT\n      MEANS<- cbind(MEANS,perc[4,]);   names(MEANS)[ncol(MEANS)]<-STRAT\n      \n      PERC<-data.frame(t(perc))\n      names(PERC) <- c(paste(STRAT,\"LOW\"),paste(STRAT,\"MDN\"),paste(STRAT,\"UPP\"),paste(STRAT,\"MEANS\"))\n      PERCS<- cbind(PERCS, PERC)\n      \n    } \n    \n    if(!SUMMARYPLOT) mtext(FILENAME, outer=T,side=3,font=2)\n    \n    #summary plot\n    par(mar=c(5.1, 4.1, 4.1, 12), xpd=TRUE)\n    \n    if(params$PLOT_CONFIDENCE_INTERVALS){\n      plot(TimeStepVals,MEANS[,2],type='l',ylim=c(0,1.25*(max(MEANS[,-1],UPPS[,-1]))),lty=LTY[1],col=COL[1],ylab=\"relative effort\",xlab=\"year\",font=20,lwd=params$lineweight)\n      for(i in 3:ncol(MEANS)) {\n        lines(TimeStepVals,MEANS[,i],lty=LTY[(i-1)],col=COL[(i-1)],lwd=params$lineweight)\n      }\n      for(i in 2:ncol(LOWS)) {\n        lines(TimeStepVals,LOWS[,i],lty=LTY[(i)],col=COL[(i-1)],lwd=params$lineweight*0.5)\n        lines(TimeStepVals,UPPS[,i],lty=LTY[(i)],col=COL[(i-1)],lwd=params$lineweight*0.5)\n      }\n    } else {\n      plot(TimeStepVals,MEANS[,2],type='l',ylim=c(0,1.25*(max(MEANS[,-1]))),lty=LTY[1],col=COL[1],ylab=\"value (EUR/yr)\",xlab=\"year\",font=20,lwd=params$lineweight)\n      for(i in 3:ncol(MEANS)) {\n        lines(TimeStepVals,MEANS[,i],lty=LTY[(i-1)],col=COL[(i-1)],lwd=params$lineweight)\n      }\n    }\n    #plot(TimeStepVals,MEANS[,2],type='l',ylim=c(min(MEANS[,-1])*.75,1.25*(max(MEANS[,-1]))),col=COL[1],lty=LTY[1],ylab=\"relative effort\",xlab=\"year\",font=20)\n    #for(i in 3:ncol(MEANS)) lines(TimeStepVals,MEANS[,i],lty=LTY[(i-1)],col=COL[(i-1)], lwd=1)\n    \n    if(SAVE & SUMMARYPLOT)  title(FILENAME,font.main=20)\n    \n    #         if(LEGEND){\n    #           legend('topright',params$strats,col = COL,lty =LTY,inset=c(-0.5,0),cex=0.65,lwd=1,text.font=3)\n    #           #legend(\"topright\",legend=params$strats,inset=c(-0.2,0), pch=c(1,3), title=\"Group\")\n    #           #legend('bottomright',params$strats,col = COL,lty =LTY,inset=c(-0.4,0),cex=0.65,lwd=1,text.font=3)\n    #         }\n    \n    if(LEGEND){\n      if (params$COMPARE_STRATEGIES) {\n        legend('topright',c(strat1name,strat2name),col = COL,lty =LTY,inset=c(-0.5,-0.2),lwd=1,text.font=3,pt.cex = 1,cex=0.5)\n      } else {\n        legend('topright',params$strats,col = COL,lty =LTY,inset=c(params$legend_x_inset2,-0.2),lwd=1,text.font=3,pt.cex = 1,cex=0.5)\n      }\n      #legend(\"topright\",legend=params$strats,inset=c(-0.2,0), pch=c(1,3), title=\"Group\")\n      #legend('bottomright',params$strats,col = COL,lty =LTY,inset=c(-0.4,0),cex=0.65,lwd=1,text.font=3)\n    }\n    \n    #         if(SAVE & !SUMMARYPLOT){\n    #           if(LEGEND) {plot(0,0,axes=F,col=\"white\",ylab=\"\",xlab=\"\")\n    #             legend('bottomright',params$strats,col = COL,lty =LTY,inset=0,cex=.65,lwd=1,text.font=20)}\n    #           title(\"effort trajectory (mean) by strategy\")\n    #           #savePlot(paste(\"OUTPUT_GEARSbySTRATEGIES//\",FILENAME,\"_PERCS.png\",sep=\"\"),type='png')\n    #         }\n    #         \n    #         if(SAVE_ONLY_SUMMARY){\n    #           plot(0,0,axes=F,col=\"white\",ylab=\"\",xlab=\"\")\n    #           legend('topright',params$strats,col = COL,lty =LTY,inset=0,cex=.65,lwd=1,text.font=20)\n    #           #savePlot(paste(\"OUTPUT_GEARSbySTRATEGIES//\",FILENAME,\"_SUMMARY.pdf\",sep=\"\"),type='pdf')\n    #         }\n    \n    if(!SAVE & !SUMMARYPLOT) title(FILENAME,font.main=20)\n    \n    if(WRITE) write.csv(PERCS[,-1],paste(\"OUTPUT_GEARSbySTRATEGIES//\",FILENAME,\"_PERCS.csv\",sep=\"\"))\n    \n    #         if(SAVE & SUMMARYPLOT & !SAVE_ONLY_SUMMARY){  title(FILENAME,font.main=20)\n    #           mtext(\"effort trajectory (median) by strategy\",side=3,outer=T,font=20)\n    #           plot(0,0,axes=F,col=\"white\",ylab=\"\",xlab=\"\")\n    #           legend('bottomright',params$strats,col = COL,lty =LTY,inset=0,cex=.6,lwd=1,text.font=20)\n    #           #savePlot(paste(\"OUTPUT_GEARSbySTRATEGIES//FLEET_summary.pdf\",sep=\"\"),type='pdf')\n    #         }\n    \n    graphics.off()\n    \n  }\n  \n}",
    "created" : 1478613103698.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1086212166",
    "id" : "FD27C3AD",
    "lastKnownWriteTime" : 1478618377,
    "last_content_update" : 1478618377065,
    "path" : "C:/Users/Mark/Dropbox/GAP2_MSE Plugin2/R Code/Plotting Trajectories post Jan 2016/Plotting_Trajectores_Project_2016/Value_Trajectories.R",
    "project_path" : "Value_Trajectories.R",
    "properties" : {
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}