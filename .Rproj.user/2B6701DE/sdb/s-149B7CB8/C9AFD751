{
    "collab_server" : "",
    "contents" : "initialise_plotting_params = function(folder_name, params){\n  #init plotting params\n  plotting_params = list()\n  \n  #Create a vector of x vals at either yearly or monthly intervals\n  plotting_params$TimeStepVals = get_timestep_vals(params$plot_each_timestep, params$StartRun_Year, params$EndRun_Year)\n  \n  #reset the director\n  setwd(paste(params$RootPath,\"\\\\\",folder_name, sep=''))\n  \n  #get a list of all the files in the Biomass folder\n  plotting_params$g <- list.files()\n  \n  return(plotting_params)\n}\n\n\nget_timestep_vals = function(plotmonthly, start_year, end_year){\n  if (plotmonthly){\n    xvals=seq(start_year,end_year-1/12,1/12)\n  } else {\n    xvals = start_year:(end_year-1)\n  }\n}\n\n\nIsIncorrectFileType_YearlyMonthly = function(FileName, plot_yearly){\n  #Checks whether the filename given is incorrect given setting to either plot yearly or none yearly values\n  \n  if(length(grep(\"Yearly\", FileName, fixed=TRUE))>0 & !plot_yearly) return(TRUE)\n  if(length(grep(\"Yearly\", FileName, fixed=TRUE))==0 & plot_yearly) return(TRUE)\n  return(FALSE)\n\n}\n\nFileIsForACompareGroup = function(params, FILENAME){\n  nNotGroups2Compare=0\n  for (igroup in params$Groups2Plot){\n    if(!length(grep(igroup,FILENAME, fixed=TRUE))>0) nNotGroups2Compare = nNotGroups2Compare+1\n  }\n  if(length(params$Groups2Plot)==nNotGroups2Compare) {\n    return(FALSE)\n  } else {\n    return(TRUE)\n  }\n}\n\nFileIsForACompareGroupFleet = function(params, FILENAME){\n  FILENAME = paste(FILENAME,\".csv\", sep=\"\")\n  for (igroup in params$Groups2Plot){\n    if(length(grep(igroup,FILENAME, fixed=TRUE))>0) {\n      for (iFleet in params$Fleets2Plot){\n        if(iFleet==\"AllFleets\" && length(grep(\"AllFleets\",FILENAME, fixed=TRUE))>0) {\n          #browser()\n          return (TRUE)\n        }\n        if(length(grep(paste(iFleet,\".csv\", sep=''),FILENAME, fixed=TRUE))>0) {\n          #browser()\n          return (TRUE)\n        }\n      }\n    }\n  }\n  return (FALSE)\n}\n\ninitialise_params = function(params){\n  params = list()\n  \n  params$plot_each_timestep = FALSE;\n  params$COMPARE_STRATEGIES = F;\n  params$PLOT_CONFIDENCE_INTERVALS = F;\n  params$Plot_yearly_files = T\n  \n  params$plot.path = \"C://Users/Mark/Dropbox/GAP2_MSE Plugin2/North Sea MultiAnnual Plan/withBiomassForcing_Yearly_Results HCR type1 and 3/Plots/\"\n  params$RootPath =  \"C://Users/Mark/Dropbox/GAP2_MSE Plugin2/North Sea MultiAnnual Plan/withBiomassForcing_Yearly_Results HCR type1 and 3/Results\"\n  \n  params$Base_NYears = 23\n  params$Projected_NYears = 20\n  params$StartRun_Year = 1991\n  \n  params$nYrs = params$Base_NYears + params$Projected_NYears\n  params$StartProjection_Year = params$StartRun_Year + params$nYrs - params$Projected_NYears\n  params$EndRun_Year = params$StartRun_Year + params$nYrs\n  \n  #Select groups and fleets to plot\n  params$Groups2Plot = c(\"GroupNo14\")\n  #params$Groups2Plot = c(\"GroupNo16\",\"GroupNo14\",\"GroupNo18\",\"GroupNo20\",\"GroupNo21\",\"GroupNo23\",\"GroupNo29\",\"GroupNo30\",\n                  # \"GroupNo31\",\"GroupNo33\",\"GroupNo34\",\"GroupNo38\",\"GroupNo42\",\"GroupNo22\",\"GroupNo26\",\"GroupNo32\",\n                  # \"GroupNo35\",\"GroupNo39\",\"GroupNo41\",\"GroupNo55\")\n  params$Fleets2Plot = c(\"FleetNo2\")\n  #params$Fleets2Plot = c(\"AllFleets\", \"FleetNo1\", \"FleetNo2\", \"FleetNo3\", \"FleetNo4\", \"FleetNo5\", \"FleetNo6\", \"FleetNo7\",\n                 #\"FleetNo8\", \"FleetNo9\", \"FleetNo10\", \"FleetNo11\", \"FleetNo12\")\n  \n  setwd(params$RootPath)\n\n  ### Load results files to get unique strats\n  results<-read.table(\"Results.csv\",sep=',',skip=8,col.names=c(\"Model\",\"Strategy\",\"GroupID\",\"GroupName\",\"Variable\",\"Value\"), fill=T)\n  results<-results[results$Strategy!=\"Z\",]#odd one in _SR_final\n  params$strats <- as.character(unique(results$Strategy))  # 10/15 strategies\n  params$strats <- params$strats[params$strats != \"NONE\"] \n  \n  params$lineweight = 0.3\n  params$legend_x_inset2 = -0.45\n  params$COL = rep(1:8,10)[1:length(params$strat)]\n  params$LTY<- c(rep(1,8),rep(2,8),rep(3,8),rep(4,8),rep(5,8),rep(6,8))[1:length(params$strats)]\n  params$WRITE<-F\n  params$SAVE<-T\n  params$LEGEND<-T\n  \n  params$MORT_HCRF_Cons <- F\n  params$MORT_HCRF_Targ<- F\n  params$QUOTA_HCRF_Cons<- F\n  params$QUOTA_HCRF_Targ<- F\n  params$MORT_REAL_LandF <- F\n  params$MORT_REAL_DiscF <- F\n  params$MORT_REAL_F <- F\n  \n  params$CATCH <-F\n  params$LANDING <- F\n  params$DISCARD <- F\n  \n  params$EFFORT <-F\n  params$VALUE <- F\n  params$BIOMASS <-F\n  \n  params$HIGHEST_VALUE <- F\n  params$CHOKE_GROUPS <- F\n  \n  return(params)\n}\n\n",
    "created" : 1478617577136.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "269296482",
    "id" : "C9AFD751",
    "lastKnownWriteTime" : 1480453256,
    "last_content_update" : 1480453256375,
    "path" : "C:/Users/Mark/Desktop/MSE_Plugin_Results_Plotting/share_tools.R",
    "project_path" : "share_tools.R",
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}