{
    "collab_server" : "",
    "contents" : "# INITIALISATION START ===============================================================================================\n\n#start with a clean sheet\nrm(list = ls())\n\n#load libraries\nsource(\"share_tools.R\")\n\n#root results path\nroot.plot =     \"C:/Users/Mark/Dropbox/GAP2_MSE Plugin2/North Sea MultiAnnual Plan/ResultsType1-4_220117/Plots/\"\nroot.results =  \"C:/Users/Mark/Dropbox/GAP2_MSE Plugin2/North Sea MultiAnnual Plan/ResultsType1-4_220117/Results/\"\n\nhcr.folders = c(\"C:/Users/Mark/Dropbox/GAP2_MSE Plugin2/NorthSea Model/2015 FINAL Key Run/DATA/HCRs/Type1_BmsytoZero\",\n                \"C:/Users/Mark/Dropbox/GAP2_MSE Plugin2/NorthSea Model/2015 FINAL Key Run/DATA/HCRs/Type2_BmsyBlimClifftoZero\",\n                \"C:/Users/Mark/Dropbox/GAP2_MSE Plugin2/NorthSea Model/2015 FINAL Key Run/DATA/HCRs/Type3_BmsytoZeroatBlim\",\n                \"C:/Users/Mark/Dropbox/GAP2_MSE Plugin2/NorthSea Model/2015 FINAL Key Run/DATA/HCRs/Type4_BmsyBlimClifftoFmin\")\n\ngroups.for.f.or.biomass = \"f\"\n\n# INITIALISATION END ===============================================================================================\n\n\n# FUNCTIONS START ==================================================================================================\n\n#get a list of target hcrs listed by strategy and group name\nLoadStrategies = function (hcr.folders, Target_or_Conservation){\n  strategies.table = getStrategyTable(hcr.folders)\n  if(Target_or_Conservation == \"Target\"){\n    strategies.table = filter(strategies.table, Target_or_Conservation==0)\n  } else if (Target_or_Conservation == \"Conservation\") {\n    strategies.table = filter(strategies.table, Target_or_Conservation==0)\n  }\n  return(strategies.table)\n  \n}\n\n# FUNCTIONS END ==================================================================================================\n\n\n# SCRIPT START  ===============================================================================================\n\nif(TRUE){\n\n  unique.groups = groupsWithHcr(hcr.folders, groups.for.f.or.biomass)\n  \n  strategies.table = LoadStrategies(hcr.folders, Target_or_Conservation = \"Target\")\n\n  dt.all = data.table()\n  \n  for(igroup in unique.groups)\n  {\n\n    #get the file in HCRQuota_Targ folder that are for \"AllFleets\"\n    realisedF.file = GetFileName_ContainsStrings(FolderPath = paste(root.results, \"/RealisedF/\", sep=\"\"), \n                                                 Strings = c(igroup), WithPath=T)\n\n    realised.f = fread(realisedF.file, skip=7, header=T)\n    \n    #Determine file is valid\n    if(!isNotAll(dt = realised.f, col.data.starts = 4, val.to.check = -9999)) next\n    \n    #load the files and sum\n    realised.f = calcLast5Year(realised.f, \"realised.f.last5yearsum\", 4, function.type = 2)\n    \n    #add a column with the group name - need this to merge with the strategy data.table\n    realised.f = appendVariableToDataTable(dt=realised.f, variable=igroup, variablename=\"GroupNameForF\", beg=TRUE, end=FALSE)\n\n    #merge the two together so that we can easily calculate the difference between two columns\n    dt = merge(x=realised.f, y=strategies.table, by = c(\"StrategyName\", \"GroupNameForF\"), all.x = TRUE)\n    dt = cbind(dt,data.table(realf.maxf.diff = dt[,realised.f.last5yearsum] - dt[,MaxF]))\n\n    #Check where the catch is greater than or less than the quota\n    dt[, \"RealisedF.greater.than.maxF\"] = dt$realf.maxf.diff>=0\n    dt[, \"RealisedF.less.than.maxF\"] = dt$realf.maxf.diff<0\n    \n    #For each strategy count how many models with realisedFs above and below maxFs and merge them together\n    NumberAbove = dt[,.(NumberAbove=sum(RealisedF.greater.than.maxF)), by=.(StrategyName)]\n    NumberBelow = dt[,.(NumberBelow=sum(RealisedF.less.than.maxF)), by=.(StrategyName)]\n    dt.counts.temp = merge(NumberAbove,NumberBelow, by = c(\"StrategyName\"))\n    \n    #Create new column that turns the counts into percentages\n    dt.counts.temp$PercentAbove = dt.counts.temp$NumberAbove/(dt.counts.temp$NumberAbove+dt.counts.temp$NumberBelow)*100\n    dt.counts.temp$PercentBelow = dt.counts.temp$NumberBelow/(dt.counts.temp$NumberAbove+dt.counts.temp$NumberBelow)*100\n    \n    #add column with groupname to differentiate after binding\n    dt.counts.temp = cbind(data.table(GroupNameForF = rep(igroup, dim(dt.counts.temp)[1])), dt.counts.temp)\n    \n    dt.counts.temp = merge(dt.counts.temp, strategies.table[,c(\"StrategyName\", \"GroupNameForF\", \"MaxF\")], by=c(\"GroupNameForF\", \"StrategyName\"))\n    \n    #bind them all together ready to be saved to csv\n    dt.all = rbind(dt.all, dt.counts.temp)\n    \n  }\n  \n  #finally save the table to csv\n  write.csv(dt.all, paste(root.plot, \"Tables/Percentage_RealisedF_Above_Below_maxF.csv\", sep=\"\"))\n}\n\n# SCRIPT END  ===============================================================================================\n\n\n\n\n\n# TESTING START ===================================================================================================\n\nif(FALSE){\n  \n  print(getStrategyTable(hcr.folders))\n  \n}\n\n# TESTING END ===================================================================================================",
    "created" : 1491474186157.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3286926804",
    "id" : "7794654E",
    "lastKnownWriteTime" : 1491490848,
    "last_content_update" : 1491490848318,
    "path" : "C:/Users/Mark/Desktop/MSE_Plugin_Results_Plotting/Calc_Percent_RealisedF_Above_Below_FMax.R",
    "project_path" : "Calc_Percent_RealisedF_Above_Below_FMax.R",
    "properties" : {
        "source_window_id" : "",
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}