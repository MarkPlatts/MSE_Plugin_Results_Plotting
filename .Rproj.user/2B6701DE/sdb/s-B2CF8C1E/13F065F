{
    "collab_server" : "",
    "contents" : "plot_type = function(type2plot) {\n  \n  options(scipen = 10)\n  \n  setwd(\"C:/Users/Mark/Desktop/MSE_Plugin_Results_Plotting/\")\n  source(\"initialisation.R\")\n  source(\"B_Trajectories.R\")\n  source(\"F_Trajectories.R\")\n  source(\"Value_Trajectories.R\")\n  source(\"Effort_Trajectories.R\")\n  source(\"Pies.R\")\n  source(\"plot_tools.R\")\n  source(\"share_tools.R\")\n  source(\"Calc_average_quota_per_fleet_group_regulation.R\")\n  \n  params = initialise_params(batch)\n\n  create.plot.dirs(params)\n  \n  ###HCR F Cons trajectories\n  #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  \n  if(type2plot==1){\n    params$MORT_HCRF_Cons <- T;  if(params$MORT_HCRF_Cons) {setwd(\"HCRF_Cons\");params$YLAB<-\"F\";print(\"Plotting MORT_HCRF_Cons\")} # what are these?\n    plot_fishing_trajectories(params, \"HCRF_Cons\")\n  }\n  \n  ###HCR F Targ trajectories\n  #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  \n  if(type2plot==2){\n    params$MORT_HCRF_Targ<- T;   if(params$MORT_HCRF_Targ) {setwd(\"HCRF_Targ\");params$YLAB<-\"F\";print(\"Plotting HCRF_Targ\")} # what are these?\n    plot_fishing_trajectories(params, \"HCRF_Targ\")\n  }\n  \n  ###HCR Quota Cons trajectories\n  #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  \n  if(type2plot==3){\n    params$QUOTA_HCRF_Cons<- T;  if(params$QUOTA_HCRF_Cons) {setwd(\"HCRQuota_Cons\");params$YLAB<-\"Quota (t)\";print(\"Plotting HCRQuota_Cons\")} # what are these?\n    plot_fishing_trajectories(params, \"HCRQuota_Cons\")\n  }  \n  \n  ###HCR Quota Targ trajectories\n  #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  \n  if(type2plot==4){\n    params$QUOTA_HCRF_Targ<- T;  if(params$QUOTA_HCRF_Targ) {setwd(\"HCRQuota_Targ\");params$YLAB<-\"Quota (t)\";print(\"Plotting HCRQuota_Targ\")} # what are these?\n    plot_fishing_trajectories(params, \"HCRQuota_Targ\")\n  }\n  \n  ###Real Landed F trajectories\n  #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  \n  if(type2plot==5){\n    params$MORT_REAL_LandF <- T; if(params$MORT_REAL_LandF) {setwd(\"RealisedLandedF\");params$YLAB<-\"F\";print(\"Plotting MORT_REAL_LandF\")}\n    plot_fishing_trajectories(params, \"RealisedLandedF\")\n  }\n  \n  ###Real Discard F trajectories\n  #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  \n  if(type2plot==6){\n    params$MORT_REAL_DiscF <- T; if(params$MORT_REAL_DiscF) {setwd(\"RealisedDiscardedF\");params$YLAB<-\"F\";print(\"Plotting MORT_REAL_DiscF\")}\n    plot_fishing_trajectories(params, \"RealisedDiscardedF\")\n  }\n  \n  ###Real F trajectories\n  #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  \n  if(type2plot==7){\n    params$MORT_REAL_F <- T;     if(params$MORT_REAL_F) {setwd(\"RealisedF\");params$YLAB<-\"F\";print(\"Plotting MORT_REAL_F\")}\n    plot_fishing_trajectories(params, \"RealisedF\")\n  }\n  \n  ###Catch trajectories\n  #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  \n  if(type2plot==8){\n    params$CATCH <-T;    if(params$CATCH) {setwd(\"CatchTrajectories\"); params$YLAB<-\"Catch (t/year)\";print(\"Plotting CATCH\")}\n    plot_fishing_trajectories(params, \"CatchTrajectories\")\n  }\n  \n  ###Landed trajectories\n  #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  \n  if(type2plot==9){\n    params$LANDING <- T; if(params$LANDING) {setwd(\"LandingsTrajectories\"); params$YLAB<-\"Landings (t/year)\";print(\"Plotting LANDING\")}\n    plot_fishing_trajectories(params, \"LandingsTrajectories\")\n  }\n  \n  ###Discard trajectories\n  #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  \n  if(type2plot==10){\n    params$DISCARD <- T; if(params$DISCARD) {setwd(\"DiscardsTrajectories\"); params$YLAB<-\"Discards (t/year)\";print(\"Plotting DISCARD\")}\n    plot_fishing_trajectories(params, \"DiscardsTrajectories\")\n  }\n  \n  ###Effort trajectories\n  #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  \n  if(type2plot==11){\n    params$EFFORT <-T;print(\"Plotting EFFORT\")\n    plot_effort_trajectories(params)\n  }\n  \n  ###Value trajectories\n  #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  \n  if(type2plot==12){\n    params$VALUE <- T;print(\"Plotting VALUE\")\n    plot_value_trajectories(params)\n  }\n  \n  ###Biomass trajectoreis\n  #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  \n  if(type2plot==13){\n    params$BIOMASS <-T;print(\"Plotting BIOMASS\")\n    plot_biomass_trajectories(params)\n  }\n  \n  ###HIGHEST_VALUE Pie chart\n  #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  if(type2plot==14){\n    params$HIGHEST_VALUE <- T;print(\"Plotting HIGHEST_VALUE\")\n    run_plot_pies(params, parents.folder.for.plots = \"/HIGHEST_VALUE/\", \n                               results.folder.name = \"HighestValueGroup\", by.regulations = TRUE)\n  }\n  \n  ###CHOKE SPECIES Pie chart\n  #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  if(type2plot==15){\n    params$CHOKE_GROUPS <- T;print(\"Plotting CHOKE_GROUPS\")\n    run_plot_pies(params, parents.folder.for.plots = \"/CHOKE_GROUPS/\",\n                        results.folder.name = \"ChokeGroup\", by.regulations = FALSE)\n  }\n  \n  ###Plot average target quota across a regulation type and models\n  #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  if(type2plot==16){\n    params$AverageQuota_EachFleet <- T; params$YLAB<-\"t/km2\";print(\"Plotting AverageQuota_EachFleet\")\n    Plot_Average_Quotas(results.path = params$RootPath, plot.path = params$plot.path, Groups = params$Groups2Plot, \n                        Fleets = params$Fleets2Plot, TimeSteps =c(1:20), \n                        RegulationTypes = c(\"Highest value\", \"Weakest stock\", \"Selective\"))\n  }\n  \n  ###Plot the biomass for the last 5 year mean\n  #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  if(type2plot==17){\n    source(\"Plot_Distribution_Last5YearsBiomassMean.R\")\n  }\n  \n}\n\nbatch = \"0\"\n\nfor(iplot in c(14)){\n  print(paste(\"Currently plotting type\", iplot))\n  plot_type(iplot)\n}\n",
    "created" : 1491495405016.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2345435768",
    "id" : "13F065F",
    "lastKnownWriteTime" : 1491495421,
    "last_content_update" : 1491495421233,
    "path" : "C:/Users/Mark/Desktop/MSE_Plugin_Results_Plotting/plotting 15July_2016_ChokeHighestValue_byFleet - Refactor.R",
    "project_path" : "plotting 15July_2016_ChokeHighestValue_byFleet - Refactor.R",
    "properties" : {
        "source_window_id" : ""
    },
    "relative_order" : 9,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}