{
    "collab_server" : "",
    "contents" : "source(\"C:/Users/Mark/Dropbox/GAP2_MSE Plugin2/R Code/Plotting Trajectories post Jan 2016/Plotting_Trajectores_Project_2016/share_tools.R\")\n\n#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nplot_fishing_trajectories <- function(params){\n  \n  #set the x axis values depending on what result type and whether plotting yearly or montly\n  if(any(params$QUOTA_HCRF_Cons,params$QUOTA_HCRF_Targ,params$MORT_HCRF_Cons,params$MORT_HCRF_Targ)){\n    TimeStepVals = get_timestep_vals(FALSE, params$StartProjection_Year, params$EndRun_Year)\n  } else if (any(params$MORT_REAL_LandF, params$MORT_REAL_DiscF, params$MORT_REAL_F, params$CATCH, params$LANDING, \n                 params$DISCARD)) {\n    TimeStepVals = get_timestep_vals(params$plot_each_timestep, params$StartProjection_Year, params$EndRun_Year)\n  }\n    g <- list.files()     # which groups are there?\n    # g[1:12] All groups 12 fleets\n    #g <- g[-c(1:12)]\n    #remove those with a comma in title as issues\n    #substr(g)\n    # gnum <- 6; FILENAME <- substr(g[gnum],1,nchar(g[gnum])-4); FILENAME\n    # groupdat <- read.csv(g[gnum],skip=7, head=T)\n    # PlotStart_Year = params$StartProjection_Year\n    # nYrs = params$Projected_NYears\n    # names(groupdat)[names(groupdat)==\"StrategyName\"]  <- \"Strategy\"\n    # if(any(params$MORT_REAL_F,params$MORT_REAL_LandF,params$MORT_REAL_DiscF)){\n    #   if(params$plot_each_timestep==F && !params$Plot_yearly_files){\n    #     groupdat<-groupdat[,c(1:4,4+seq(1,nYrs*12,12))]\n    #   }\n    # }\n    # \n    # if(any(params$MORT_HCRF_Cons,params$MORT_HCRF_Targ)){\n    #   groupdat <- groupdat[,c(1,2,3,4,4+seq(1,params$Projected_NYears,1))]\n    # }\n    # if(any(params$QUOTA_HCRF_Cons,params$params$QUOTA_HCRF_Targ)){                               \n    #   groupdat <- groupdat[,c(1:5,5+seq(1,params$Projected_NYears,1))]\n    # }\n    # \n    # #take jans   RealisedF is just forecast\n    # \n    # #plot group above for strategies\n    # strat_i <-6     #strat[1] is \"1 CFP_2015 TargetF_Weakest stock\"\n    # if(any(params$MORT_HCRF_Cons,params$MORT_HCRF_Targ)){\n    #   data2plot<- groupdat[groupdat$Strategy %in% params$strats[strat_i],5:ncol(groupdat)]\n    # }\n    # if(any(params$CATCH,params$DISCARD,params$LANDING,params$QUOTA_HCRF_Cons,params$QUOTA_HCRF_Targ)){\n    #   data2plot<- groupdat[groupdat$Strategy %in% params$strats[strat_i],6:ncol(groupdat)]\n    # }\n    # \n    # if(any(params$MORT_REAL_F,params$MORT_REAL_LandF,params$MORT_REAL_DiscF)){ \n    #   data2plot<- groupdat[groupdat$Strategy %in% params$strats[strat_i],5:ncol(groupdat)]\n    # }\n    # \n    # \n    # \n    # #colourful plot\n    # # plot mean line\n    # ymax = max(data2plot)\n    # #browser()\n    # plot(TimeStepVals,apply(data2plot,2,mean),type='l',lwd=2, ylim=c(0,ymax),\n    #      main=paste(FILENAME,params$strats[strat_i],sep=' '),xlab='years',ylab=\"\")\n    # #     if(params$MORT_REAL_F) TITLE=\"Realised F\"\n    # #     if(params$MORT_REAL_LandF) TITLE=\"Landed F\"\n    # #     if(params$MORT_REAL_DiscF) TITLE=\"Discarded F\"\n    # #     if(params$CATCH) TITLE=\"Realised catch\"\n    # #     if(params$LANDING) TITLE=\"Landed catch\"\n    # #     if(params$DISCARD) TITLE=\"Discarded catch\"\n    # TITLE = FILENAME\n    # title(TITLE,line=-1,cex.main=0.8)\n    # # add all sims\n    # \n    # for(s in 1:nrow(data2plot)) lines(TimeStepVals,data2plot[s,],lwd=1,col=s)\n    # \n    # \n    # #all trajectories        \n    # \n    # graphics.off()#par(mfrow=c(5,6),mar=c(2,2,4,2),oma=c(1,1,3,1))\n    #if(length(strat)==10) params$COL<-c(1:6,9:12)     # for line types and colours #skip yellow 7\n    #if(length(strat)==22) params$COL<-c(1:6,8:12,1:6,8:12) # have more now!\n    # params$COL = rep(seq(1,8,1),8)[1:length(params$strats)]\n    # LTY<- c(rep(1,8),rep(2,8),rep(3,8),rep(4,8),rep(5,8),rep(6,8))[1:length(params$strats)]; #LTY[1:6] <- params$COL[6:1]\n    \n    if(!params$SAVE) pdf(file =paste(plot.path,\"\\\\OUTPUT_GROUP_FIGS\\\\\",TITLE,\" plots by group and strategy.pdf\",sep=\"\"),width=14,height=7,paper=\"a4r\")\n    \n    for(G in g){\n\n      FILENAME <- substr(G,1,nchar(G)-4)\n      print(FILENAME)\n      \n      #stopifnot(FILENAME!=\"HCR_F_Cons_Nephrops_GroupsNo55\") \n      if (any(params$MORT_REAL_F,params$MORT_REAL_LandF,params$MORT_REAL_DiscF, params$MORT_HCRF_Cons,params$MORT_HCRF_Targ)){\n        if(params$COMPARE_STRATEGIES && !FileIsForACompareGroup(params, FILENAME)) next\n      } else if (any(params$CATCH,params$DISCARD,params$LANDING,params$QUOTA_HCRF_Cons,params$QUOTA_HCRF_Targ)) {\n        if (params$COMPARE_STRATEGIES && !FileIsForACompareGroupFleet(params, FILENAME)) next\n      }\n      \n      #Need to figure out what to do about types that are yearly but don't have yearly in them\n      if(any(params$CATCH,params$DISCARD,params$LANDING,params$MORT_REAL_F,params$MORT_REAL_LandF,\n             params$MORT_REAL_DiscF)){\n        if(IsIncorrectFileType_YearlyMonthly(FILENAME, params$Plot_yearly_files)) next\n      }\n      \n      #if(length(grep(\"Yearly\", FILENAME, fixed=TRUE))==1 && !params$Plot_yearly_files) next\n      \n      # GroupsNotPlot = c(\"Planktonic\", \"Seals_Grou\",\"Small mobi\", \"Benthic mi\", \"Juvenile s\",\"Juvenile W\",\"Juvenile H\",\"Juvenile S\",\"Juvenile C\",\"Herring (j\")\n      # for(iGroup in GroupsNotPlot){\n      #   if (length(grep(iGroup, FILENAME, fixed=TRUE))==1) next\n      # }\n      #Checks whether the fleet and group of this file has been chosen at top of script to be plotted\n      \n      DontPlot = TRUE\n      for(iGroup in params$Groups2Plot){\n        if (length(grep(paste(\"_\",iGroup, sep=''), G, fixed=TRUE))==1) {\n          DontPlot=FALSE\n          break\n        }\n      }\n      if (DontPlot==TRUE) next\n      \n      if(any(params$QUOTA_HCRF_Cons,params$QUOTA_HCRF_Targ,params$CATCH,params$DISCARD,params$LANDING)){\n        #Checks whether the fleet of this file has been chosen at top of script to be plotted\n        DontPlot = TRUE\n        for(iFleet in params$Fleets2Plot){\n          if (length(grep(paste(iFleet,\".csv\", sep=''), G, fixed=TRUE))==1) {\n            DontPlot=FALSE\n            break\n          }\n        }\n        if (DontPlot==TRUE) next\n      }\n      \n      #if(substr(FILENAME,12,21) %in% c(\"Planktonic\", \"Seals_Grou\",\"Small mobi\", \"Benthic mi\", \"Juvenile s\",\"Juvenile W\",\"Juvenile H\",\"Juvenile S\",\"Juvenile C\",\"Herring (j\")) next\n      #c(\"Planktonic microflora (incl. Bacteria, protozoa)_GroupNo64\",\"Juvenile sharks_GroupNo5\", \"Seals_GroupNo3\",     \"Small mobile epifauna (swarming crustaceans)_GroupNo59\",                       \"Benthic microflora (incl. Bacteria, protozoa))_GroupNo63\", \"Juvenile Whiting (0-1, 0-20cm)_GroupNo15\",          \"Juvenile Haddock (0-1, 0-20cm)_GroupNo17\",\"Juvenile Saithe (0-3, 0-40cm)_GroupNo19\",\"Juvenile Cod(0-2, 0-40cm)_GroupNo13\",\"Herring (juvenile 0, 1)_GroupNo28\")) next\n      \n      groupdat <- read.table(file=paste(G,sep=''),skip=7, header = TRUE, fill = TRUE,sep=\",\",as.is =T)\n      #browser()\n      #if all values in the file are -9999 then we need to skip plotting it\n      if(any(params$MORT_HCRF_Cons,params$MORT_HCRF_Targ)){\n        testvaliddata<- groupdat[, 5:ncol(groupdat)]\n        if(length(as.matrix(testvaliddata))*-9999==sum(testvaliddata)) {next}\n      }\n      \n      if(any(params$MORT_REAL_F,params$MORT_REAL_LandF,params$MORT_REAL_DiscF)){\n        testvaliddata<- groupdat[, 5:ncol(groupdat)]\n        if(sum(testvaliddata)==0) {next}\n      }\n      \n      if(any(params$QUOTA_HCRF_Cons,params$QUOTA_HCRF_Targ)){\n        testvaliddata<- groupdat[, 6:ncol(groupdat)]\n        if(length(as.matrix(testvaliddata))*-9999==sum(testvaliddata)) {next}\n      }\n      if (params$SAVE) {\n        if(!params$COMPARE_STRATEGIES) {\n          if(any(params$QUOTA_HCRF_Cons,params$QUOTA_HCRF_Targ,params$CATCH,params$DISCARD,params$LANDING)){\n            png(filename = paste(plot.path,\"\\\\OUTPUT_GEARSGROUPSbySTRATEGIES\\\\\",FILENAME,\"_.png\",sep=\"\"), res=900, width=10, height=4, units='in')              \n          } else {\n            png(filename = paste(plot.path,\"\\\\OUTPUT_GROUP_FIGS\\\\\",FILENAME,\"_.png\",sep=\"\"), res=900, width=10, height=4, units='in')              \n          }\n        } else {\n          png(filename = paste(plot.path,\"\\\\OUTPUT_COMPARE_STRATS\\\\\",FILENAME,\"_COMP.png\",sep=\"\"), res=900, width=10, height=4, units='in')\n        }\n      }\n      \n      \n      print(paste(\"The number of open devices is\",length(dev.list())))\n      #if(length(dev.list())>1) browser()\n      \n      if(any(params$MORT_REAL_F,params$MORT_REAL_LandF,params$MORT_REAL_DiscF)){\n        groupdat <- groupdat[,-which(names(groupdat)==\"ResultType\")]\n        if(params$plot_each_timestep==F && !params$Plot_yearly_files){\n          groupdat<-groupdat[,c(2:3,3+seq(1,params$Projected_NYears*12,12))] # TAKE JANS\n        } else if(params$plot_each_timestep && !params$Plot_yearly_files) {\n          groupdat<-groupdat[,c(2:(3+params$Projected_NYears*12))]\n        } else {\n          groupdat<-groupdat[,c(2:(3+params$Projected_NYears))]\n        }\n        \n      }\n      \n      if(any(params$MORT_HCRF_Cons,params$MORT_HCRF_Targ)){\n        groupdat <- groupdat[,-which(names(groupdat)==\"ResultType\")]\n        groupdat<-groupdat[,2:ncol(groupdat)] # TAKE JANS\n      }\n      \n      if(any(params$QUOTA_HCRF_Cons,params$QUOTA_HCRF_Targ)){\n        groupdat <- groupdat[,-which(names(groupdat)==\"ResultType\")]\n        groupdat<-groupdat[,2:ncol(groupdat)]\n      }\n      \n      if(any(params$CATCH,params$DISCARD,params$LANDING)){\n        #missing line data! arrgh\n        #groupdat<-groupdat[-nrow(groupdat),]\n        #for(i in 5:ncol(groupdat)) groupdat[,i] <- as.numeric(groupdat[,i])#\n        #groupdat[,(5:ncol(groupdat))] <- as.matrix(groupdat[,(5:ncol(groupdat))])#use as.is instead\n        \n        #groupdat <- groupdat[,-which(names(groupdat)==\"CatchType\")]\n        #if(any(names(groupdat)==\"FleetName\")) groupdat <- groupdat[,-which(names(groupdat)==\"FleetName\")]\n        groupdat[,6:ncol(groupdat)] <- groupdat[,6:ncol(groupdat)]\n        \n        #WORK OUT AVE ANN params$CATCH\n        # AVEgroupdat <-   groupdat[,c(1:5,5+seq(1,params$Projected_NYears*12,12))]\n        # for(i in 1:11) AVEgroupdat[,6:ncol(AVEgroupdat)] <- AVEgroupdat[,6:ncol(AVEgroupdat)] + groupdat[,c(5+seq(1,params$Projected_NYears*12,12))+i] #jan\n        # #take JANS\n        # \n        # #overwrite with AVERAGE\n        # AVEgroupdat[,6:ncol(AVEgroupdat)] <- AVEgroupdat[,6:ncol(AVEgroupdat)]/12 #average yr # rbind(3+seq(1,(nyrs-Base_NYears)*12,12) ,(2+seq(1,(nyrs-Base_NYears)*12,12)+12))  jan@dec\n        # now t not t/km2\n        if(params$plot_each_timestep==F && !params$Plot_yearly_files){\n          groupdat<-groupdat[,c(1:5,5+seq(1,params$Projected_NYears*12,12))]\n        } else if (params$plot_each_timestep && !params$Plot_yearly_files){\n          groupdat<-groupdat[,c(1:(5+params$Projected_NYears*12))]\n        } else {\n          groupdat<-groupdat[,c(1:(5+params$Projected_NYears))]\n        }\n        \n      }\n      \n      \n      \n      #This code converts the data into percentiles and the mean and only these values are plotted and saved\n      PERCS<-MDNS<- LOWS<- UPPS<- MEANS<- data.frame(year=TimeStepVals,row.names =TimeStepVals)\n      \n      for(strat_i in 1:length(params$strats)){\n        \n        STRAT<-paste(params$strats[strat_i],sep=' ')\n        \n        if(params$COMPARE_STRATEGIES){\n          if(strat1name!=STRAT && strat2name!=STRAT) {\n            next\n          }\n        }\n        \n        \n        #select subset of data\n        if(any(params$CATCH,params$DISCARD,params$LANDING)){\n          data2plot<- groupdat[groupdat$Strategy %in% STRAT,6:ncol(groupdat)] * 570000\n        }\n        \n        if(any(params$MORT_HCRF_Cons,params$MORT_HCRF_Targ)){\n          data2plot<- groupdat[groupdat$Strategy %in% STRAT, 3:ncol(groupdat)]\n          if(length(data2plot)*-9999==sum(data2plot)) {\n            next\n          }\n        }\n        \n        if(any(params$MORT_REAL_F,params$MORT_REAL_LandF,params$MORT_REAL_DiscF)){\n          data2plot<- groupdat[groupdat$Strategy %in% STRAT, 3:ncol(groupdat)]\n        }\n        \n        if(any(params$QUOTA_HCRF_Cons,params$QUOTA_HCRF_Targ)){\n          data2plot<- groupdat[groupdat$Strategy %in% STRAT, 4:ncol(groupdat)] * 570000\n        }\n        \n        if((nrow(data2plot)==0)) next\n        #quantiles for polygon plot\n        perc<-apply(data2plot,2, FUN=function(x){quantile(x,probs=c(0.025,0.5,0.975),na.rm=T)})\n        perc<-rbind(perc, apply(data2plot,2, FUN=mean) )\n        #save percs\n        LOWS<- cbind(LOWS,perc[1,]);   names(LOWS)[ncol(LOWS)]<-STRAT\n        MDNS<- cbind(MDNS,perc[2,]);   names(MDNS)[ncol(MDNS)]<-STRAT\n        UPPS<- cbind(UPPS,perc[3,]);   names(UPPS)[ncol(UPPS)]<-STRAT\n        MEANS<- cbind(MEANS,perc[4,]); names(MEANS)[ncol(MEANS)]<-STRAT\n        \n        PERC<-data.frame(t(perc))\n        names(PERC) <- c(paste(STRAT,\"LOW\"),paste(STRAT,\"MDN\"),paste(STRAT,\"UPP\"),paste(STRAT,\"MEAN\"))\n        PERCS<- cbind(PERCS, PERC)\n      }\n      \n      \n      #now summary plot\n      if(ncol(MEANS)==1) {\n        graphics.off()\n        next\n      }\n      if(sum(MEANS[,-1],na.rm=T)==0 & !any(params$MORT_REAL_F,params$MORT_REAL_LandF,params$MORT_REAL_DiscF) ) {\n        graphics.off()\n        next\n      }\n      #if(params$plot_each_timestep==T) {TimeStepVals = seq(PlotStart_Year,params$EndRun_Year-1/12,1/12)} else {TimeStepVals=PlotStart_Year:(params$EndRun_Year-1)}\n      par(mar=c(5.1, 4.1, 4.1, 15), xpd=TRUE)\n      \n      \n\n      if(params$PLOT_CONFIDENCE_INTERVALS){\n        plot(TimeStepVals,MEANS[,2],type='l',ylim=c(0,1.25*(max(MEANS[,-1],UPPS[,-1],na.rm=T))),lty=params$LTY[1],col=params$COL[1],ylab=params$YLAB,xlab=\"year\",font=20,lwd=params$lineweight)\n        for(i in 3:ncol(MEANS)) {\n          lines(TimeStepVals,MEANS[,i],lty=params$LTY[(i-1)],col=params$COL[(i-1)],lwd=params$lineweight)\n        }\n        for(i in 2:ncol(LOWS)) {\n          lines(TimeStepVals,LOWS[,i],lty=params$LTY[(i)],col=params$COL[(i-1)],lwd=params$lineweight*0.5)\n          lines(TimeStepVals,UPPS[,i],lty=params$LTY[(i)],col=params$COL[(i-1)],lwd=params$lineweight*0.5)\n        }\n      } else {\n        plot(TimeStepVals,MEANS[,2],type='l',ylim=c(0,1.25*(max(MEANS[,-1],na.rm = T))),lty=params$LTY[1],col=params$COL[1],ylab=params$YLAB,xlab=\"year\",font=20,lwd=params$lineweight)\n        for(i in 3:ncol(MEANS)) {\n          lines(TimeStepVals,MEANS[,i],lty=params$LTY[(i-1)],col=params$COL[(i-1)],lwd=params$lineweight)\n        }\n      }\n      \n      #       plot(TimeStepVals,MEANS[,2],type='l',ylim=c(min(MEANS[,-1],na.rm=T)*.75,1.25*(max(MEANS[,-1],na.rm=T))),lty=params$LTY[1],col=params$COL[1],ylab=params$YLAB,xlab=\"year\",font=20,lwd=params$lineweight)\n      #       for(i in 3:ncol(MEANS)) lines(TimeStepVals,MEANS[,i],lty=params$LTY[(i-1)],col=params$COL[(i-1)],lwd=params$lineweight)\n      \n      if(any(params$MORT_REAL_F,params$MORT_REAL_LandF,params$MORT_REAL_DiscF)) title(c(\"F trajectory (mean) by strategy\",FILENAME),font.main=20)#only individual plots   \n      if(any(params$CATCH,params$DISCARD,params$LANDING))   title(c(\"Catch (mean) by strategy\",FILENAME),font.main=20)\n      if(any(params$MORT_HCRF_Cons,params$MORT_HCRF_Targ,params$QUOTA_HCRF_Cons,params$QUOTA_HCRF_Targ)) title(FILENAME,font.main=20)\n      \n      #title(TITLE,line=-1,cex.main=0.8)\n      if(params$LEGEND){\n        if(params$COMPARE_STRATEGIES){\n          legend('bottomright',c(strat1name,strat2name),col = params$COL,lty =params$LTY,inset=c(-0.72,0),pt.cex = 1,cex=0.5,lwd=1,text.font=3)\n        } else {\n          #inset=c(x_coord,y_coord)\n          #legend('bottomright',params$strats,col = params$COL,lty =params$LTY,inset=c(-0.4,-0.4),pt.cex = 1,cex=0.5,lwd=1,text.font=3)\n          #legend('topright',params$strat,col = params$COL,lty =params$LTY,inset=c(-0.72,-0.2),lwd=1,text.font=3,pt.cex = 1,cex=0.5)\n          legend('topright',params$strat,col = params$COL,lty =params$LTY,inset=c(params$legend_x_inset2,-0.2),lwd=1,text.font=3,pt.cex = 1,cex=0.5)\n        }\n      }\n      \n      #if(params$SAVE) savePlot(paste(params$RootPath,\"\\\\OUTPUT_GROUP_FIGS\\\\\",FILENAME,TITLE,\".pdf\",sep=\"\"),type='pdf')\n      if (any(params$MORT_REAL_F,params$MORT_REAL_LandF,params$MORT_REAL_DiscF)){\n        if(params$WRITE) write.csv(PERCS[,-1],paste(plot.path,\"\\\\OUTPUT_FcatchBySTRATEGIES\\\\\",FILENAME,\".csv\",sep=\"\"))\n      } else if (any(params$CATCH,params$DISCARD,params$LANDING)) {\n        \n      } else if (any(params$MORT_HCRF_Cons,params$MORT_HCRF_Targ, params$QUOTA_HCRF_Cons,params$QUOTA_HCRF_Targ)) {\n        \n      }\n      \n      graphics.off()\n    }#next G\n    if(!params$SAVE) dev.off()\n    #setwd(\"Y:\\\\WP1 Tradeoffs in mixed fisheries\\\\NSea Multiannual Plan\\\\Evaluation\\\\STECF Results 1000_30 years_SR_final\\\\\")\n  \n}\n\n",
    "created" : 1478613097866.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2149382320",
    "id" : "2C08C2FC",
    "lastKnownWriteTime" : 1478638546,
    "last_content_update" : 1478638546155,
    "path" : "C:/Users/Mark/Dropbox/GAP2_MSE Plugin2/R Code/Plotting Trajectories post Jan 2016/Plotting_Trajectores_Project_2016/F_Trajectories.R",
    "project_path" : "F_Trajectories.R",
    "properties" : {
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}