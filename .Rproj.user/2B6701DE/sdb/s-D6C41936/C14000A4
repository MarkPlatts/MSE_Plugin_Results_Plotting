{
    "collab_server" : "",
    "contents" : "source(\"C:/Users/Mark/Dropbox/GAP2_MSE Plugin2/R Code/Plotting Trajectories post Jan 2016/Plotting_Trajectores_Project_2016/share_tools.R\")\n\n###Biomass trajectories\n#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nplot_biomass_trajectories <- function(params){\n  #Load up biomass reference file\n  biom_refs = read.csv(paste(params$plot.path,\"/Biom_refs.csv\",sep=''))\n\n  #get a list of all the files in the Biomass folder\n  g <- list.files(paste(params$RootPath,\"\\\\Biomass\", sep=''))     # which groups are there?\n  setwd(params$RootPath) #reset the director\n  \n  #Create a vector of x vals at either yearly or monthly intervals\n  TimeStepVals = get_timestep_vals(params$plot_each_timestep, params$StartRun_Year, params$EndRun_Year)\n\n  #This is used to figure out how many years to plot for\n  #params$nYrs <- (ncol(groupdat)-4)/12 # num yrs\n  \n  #setwd(\"Y:\\\\WP1 Tradeoffs in mixed fisheries\\\\NSea Multiannual Plan\\\\Evaluation\\\\STECF Results 1000_30 years_SR\\\\\")\n  # Model Strategy  X1...months\n  #take jans   BIOMASS is 1991+forecast, RealisedF is just forecast\n  # if (!params$plot_each_timestep && !params$Plot_yearly_files) {groupdat<-groupdat[,c(1:4,4+seq(1,params$nYrs*12,12))]}          #dec values would be  groupdat[,3+seq(12,params$params$nYrs*12,12)]\n  # if (params$plot_each_timestep && !params$Plot_yearly_files) {groupdat<-groupdat[,c(1:4,4+seq(1,params$nYrs*12,1))]}\n  # groupdat[,-c(1:4)] <- groupdat[,-c(1:4)]*570000\n  # groupdat <- groupdat[,-which(names(groupdat)==\"ResultType\")]\n  # groupdat <- groupdat[,-which(names(groupdat)==\"GroupName\")]\n  # groupdat <- groupdat[,-which(names(groupdat)==\"ModelID\")]\n  #names(groupdat)[names(groupdat)==\"StrategyName\"]  <- \"Strategy\"\n  \n  #groupdat[62:66,1:5] #inspect\n  #groupdat[1:5,1:5] #info\n  \n  #plot group above for strategies\n  #strat_i <-1     #strat[1] is \"CFP_TargetF_Highest value\"\n  #data2plot<- groupdat[groupdat$Strategy %in% params$strats[strat_i],2:ncol(groupdat)]\n  #ymax = max(data2plot)\n  #colourful plot\n  # plot mean line\n  #browser()\n\n  # plot(TimeStepVals,apply(data2plot,2,mean),type='l',lwd=2,ylim=c(0,ymax*1.2),\n  #      main=paste(FILENAME,params$strats[strat_i],sep=' '),xlab='years',ylab=\"biomass (t)\")\n  # # add all sims\n  # for(s in 1:nrow(data2plot)) lines(TimeStepVals,data2plot[s,],lwd=1,col=s)  \n  \n  #biomass trajectories\n  #graphics.off() #par(mfrow=c(5,6),mar=c(2,2,4,2),oma=c(1,1,3,1))\n  \n  ## Strategies to plot\n  #3          CFP_FIXEDTargetF_Highest value\n  #5          CFP_FIXEDTargetF_Weakest stock\n  #8          HCR_HighF_Weakest stock\n  #9          HCR_LowF_Weakest stock\n  #10        HCR_TargetF_Highest value\n  #12        HCR_TargetF_Weakest stock\n  #params$strats<- params$strats\n  #params$strats<- strat[c(3,5,8,9,10,12)]\n  #all biomass trajectories\n  #WRITE<-F\n  #SAVE<-T\n  #graphics.off()#par(mfrow=c(5,6),mar=c(2,2,4,2),oma=c(1,1,3,1))\n  #COL = rep(1:8,10)[1:length(params$strat)]\n  #LTY<- c(rep(1,8),rep(2,8),rep(3,8),rep(4,8),rep(5,8),rep(6,8))[1:length(params$strats)]; #params$LTY[1:6] <- params$COL[6:1]\n  #params$LEGEND<-T\n  #params$strats <- as.character(unique(params$strats))  # 10 strategies\n  #setwd(params$RootPath)\n  #setwd(\"Y:\\\\WP1 Tradeoffs in mixed fisheries\\\\NSea Multiannual Plan\\\\Evaluation\\\\STECF Results 1000_30 years_SR_additionalruns\\\\\"); g <- list.files(\"Trajectories2\"); params$strat<- c(\"HCR_HighF_Highest value\",\"HCR_LowF_Highest value\")\n  \n  for(G in g){\n    \n    #Get the filename to be used to check whether yearly in name, to name files of plots and to add text to plots\n    FILENAME = substr(G,1,nchar(G)-4)\n    \n    #Check whether we should plot the yearly files or the monthly files\n    if(IsIncorrectFileType_YearlyMonthly(FILENAME, params$Plot_yearly_files)) next\n    \n    #Checks whether the group is designated to be plotted\n    DontPlot = TRUE\n    for(iGroup in params$Groups2Plot){\n      if (length(grep(paste(iGroup,\".csv\", sep=''), G, fixed=TRUE))==1) {\n        DontPlot=FALSE\n        break\n      }\n    }\n    if (DontPlot==TRUE) next\n    \n    \n    groupdat <- read.csv(paste(\"Biomass\\\\\",G,sep=''),skip=7, head=T)\n    GroupName = groupdat[1,1]\n    \n    \n    if (params$SAVE) {\n      if(!params$COMPARE_STRATEGIES) {\n        png(filename = paste(params$plot.path,\"\\\\OUTPUT_GROUP_FIGS\\\\\",FILENAME,\"_PERCS.png\",sep=\"\"), res=900, width=8, height=4, units='in')\n      } else {\n        png(filename = paste(params$plot.path,\"\\\\OUTPUT_COMPARE_STRATS\\\\\",FILENAME,\"_COMP.png\",sep=\"\"), res=900, width=8, height=4, units='in')\n      }\n    }\n    \n    if(!params$plot_each_timestep && !params$Plot_yearly_files){\n      groupdat<-groupdat[,c(1:4,4+seq(1,params$params$nYrs*12,12))] \n    } else if (params$plot_each_timestep && !params$Plot_yearly_files){\n      groupdat<-groupdat[,c(1:4,4+seq(1,params$params$nYrs*12,1))] \n    }\n    #dec values would be  groupdat[,3+seq(12,params$params$nYrs*12,12)]\n    groupdat[,-c(1:4)] <- groupdat[,-c(1:4)]*570000\n    groupdat <- groupdat[,-which(names(groupdat)==\"ResultType\")]\n    groupdat <- groupdat[,-which(names(groupdat)==\"GroupName\")]\n    groupdat <- groupdat[,-which(names(groupdat)==\"ModelID\")]\n    \n    PERCS<-MDNS<- LOWS<- UPPS<- MEANS<- data.frame(year=TimeStepVals,row.names =TimeStepVals)\n    for(strat_i in 1:length(params$strats)){\n      \n      STRAT<-paste(params$strats[strat_i],sep=' ')\n      \n      if(params$COMPARE_STRATEGIES){\n        if(strat1name!=STRAT && strat2name!=STRAT) next\n      }\n      \n      #select subset of data\n      #browser()\n      data2plot<- groupdat[groupdat$Strategy %in% STRAT,2:ncol(groupdat)]\n      \n      #quantiles for polygon plot\n      perc<-apply(data2plot,2, FUN=function(x){quantile(x,probs=c(0.025,0.5,0.975),na.rm=T)})\n      perc<-rbind(perc, apply(data2plot,2, FUN=mean) )\n      \n      #save percs\n      LOWS<- cbind(LOWS,perc[1,]);   names(LOWS)[ncol(LOWS)]<-STRAT\n      MDNS<- cbind(MDNS,perc[2,]);   names(MDNS)[ncol(MDNS)]<-STRAT\n      UPPS<- cbind(UPPS,perc[3,]);   names(UPPS)[ncol(UPPS)]<-STRAT\n      MEANS<- cbind(MEANS,perc[4,]);   names(MEANS)[ncol(MEANS)]<-STRAT\n      \n      PERC<-data.frame(t(perc))\n      names(PERC) <- c(paste(STRAT,\"LOW\"),paste(STRAT,\"MDN\"),paste(STRAT,\"UPP\"),paste(STRAT,\"MEAN\"))\n      PERCS<- cbind(PERCS, PERC)\n    }\n    \n    #plot the reference points\n    #read_biom_refs = function(biom_refs, group, ref_type)\n    bpa = read_biom_refs(biom_refs, GroupName, \"bpa\") * 570\n    blim = read_biom_refs(biom_refs, GroupName, \"blim\") * 570\n    \n    #now summary plot\n    #par(mar=c(5.1, 4.1, 4.1, 20), xpd=TRUE)\n    par(mar=c(5.1, 4.1, 4.1, 16), xpd=TRUE)\n    \n    #figure out what the highest value the y-axis needs to be\n    if(!is.na(bpa)){\n      y_upper = max(MEANS[,-1],UPPS[,-1],bpa)\n    } else {\n      y_upper = max(MEANS[,-1],UPPS[,-1])\n    }\n\n    if(params$PLOT_CONFIDENCE_INTERVALS){\n      plot(TimeStepVals,MEANS[,2],type='l',ylim=c(0,1.25*y_upper),lty=params$LTY[1],col=params$COL[1],ylab=\"relative biomass (t)\",xlab=\"year\",font=20,lwd=params$lineweight)\n      for(i in 3:ncol(MEANS)) {\n        lines(TimeStepVals,MEANS[,i],lty=params$LTY[(i-1)],col=params$COL[(i-1)],lwd=params$lineweight)\n      }\n      for(i in 2:(ncol(LOWS)-1)) {\n        #browser()\n        lines(TimeStepVals,LOWS[,i],lty=params$LTY[(i)],col=params$COL[(i-1)],lwd=params$lineweight*0.5)\n        lines(TimeStepVals,UPPS[,i],lty=params$LTY[(i)],col=params$COL[(i-1)],lwd=params$lineweight*0.5)\n      }\n    } else {\n      plot(TimeStepVals,MEANS[,2],type='l',ylim=c(0,1.25*y_upper),lty=params$LTY[1],col=params$COL[1],ylab=\"relative biomass (t)\",xlab=\"year\",font=20,lwd=params$lineweight)\n      for(i in 2:ncol(MEANS)) {\n        lines(TimeStepVals,MEANS[,i],lty=params$LTY[(i-1)],col=params$COL[(i-1)],lwd=params$lineweight)\n      }\n    }\n    \n    #plot reference levels\n    if(!is.na(bpa)){\n      lines(c(TimeStepVals[1],TimeStepVals[length(TimeStepVals)]),c(bpa,bpa),col=1,lwd=0.5, lty=3)\n      text(TimeStepVals[1]+1, bpa+0.05*y_upper, \"Bpa\", cex=0.5)\n    }\n    if(!is.na(blim)){\n      lines(c(TimeStepVals[1],TimeStepVals[length(TimeStepVals)]),c(blim,blim),col=1,lwd=0.5, lty=3)\n      text(TimeStepVals[1]+1, blim+0.05*y_upper, \"Blim\", cex=0.5)\n    }\n    \n    title(c(\"Biomass trajectory (mean) by strategy\",FILENAME),font.main=20)#only individual plots\n    #       if(params$LEGEND){\n    #         if(FILENAME %in% c(\"Blue whiting_GroupNo22\",\"Seabirds_GroupNo4\",\"Gurnards_GroupNo27\")){\n    #           legend('bottomleft',strat,col = params$COL,lty =params$LTY,inset=0,cex=0.65,lwd=1,text.font=20)\n    #         } else { legend('bottomright',strat,col = params$COL,lty =params$LTY,inset=0,cex=0.65,lwd=1,text.font=20) }\n    #       }\n    if(params$LEGEND){\n      if (params$COMPARE_STRATEGIES) {\n        legend('topright',c(strat1name,strat2name),col = params$COL,lty =params$LTY,inset=c(-0.72,0),pt.cex = 1,cex=0.5,lwd=1,text.font=3)\n      } else {\n        legend('topright',params$strats,col = params$COL,lty =params$LTY,inset=c(-0.72,-0.2),lwd=1,text.font=3,pt.cex = 1,cex=0.5)\n      }\n      #legend(\"topright\",legend=params$strats,inset=c(-0.2,0), pch=c(1,3), title=\"Group\")\n      #legend('bottomright',params$strats,col = params$COL,lty =params$LTY,inset=c(-0.4,0),cex=0.65,lwd=1,text.font=3)\n    }\n    \n    \n    #if(params$SAVE) savePlot(paste(\"OUTPUT_GROUP_FIGS//\",FILENAME,\"_PERCS.pdf\",sep=\"\"),type='pdf')\n    graphics.off()\n    \n    if(params$WRITE) write.csv(PERCS[,-1],paste(\"OUTPUT_percentiles//\",FILENAME,\"_PERCS.csv\",sep=\"\"))\n  }\n  #if(!params$SAVE) dev.off()\n  graphics.off()\n}\n",
    "created" : 1478613102024.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3287164595",
    "id" : "C14000A4",
    "lastKnownWriteTime" : 1478618371,
    "last_content_update" : 1478618371666,
    "path" : "C:/Users/Mark/Dropbox/GAP2_MSE Plugin2/R Code/Plotting Trajectories post Jan 2016/Plotting_Trajectores_Project_2016/B_Trajectories.R",
    "project_path" : "B_Trajectories.R",
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}