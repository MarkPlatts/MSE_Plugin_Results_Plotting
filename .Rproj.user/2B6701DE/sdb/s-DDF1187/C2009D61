{
    "collab_server" : "",
    "contents" : "#Graphs frotx1K_km2m results of the Harvest Control Rules - Steve Mack, Mark Platts\n#generic code - Silvia Hadeler March 2013\n\n\n# Initialisation ----------------------------------------------------------\n\n#to clear any previous calculation which may interfere with the current one \n#rm(list=ls())\n\n#load sources\nthis.dir <- dirname(parent.frame(2)$ofile)\nsetwd(this.dir)\nsource(\"PlotEndDistributions.r\")\nsource(\"https://raw.githubusercontent.com/ggrothendieck/gsubfn/master/R/list.R\")\n\n#Set paths\nrootpath = \"C:/Users/Mark/Dropbox/GAP2_MSE Plugin2/North Sea MultiAnnual Plan/ResultsType1 and 3_141216/\"\nresults_folder_path = paste(rootpath,\"Results/\",sep=\"\")\nresults_csv_inc_path = paste(results_folder_path,\"Results.csv\", sep=\"\")\nplots_folder_path = paste(rootpath,\"Plots/\",sep=\"\")\nbiomrefs_csv_inc_path = paste(plots_folder_path,\"Biom_refs.csv\", sep=\"\")\noutput_folder = paste(plots_folder_path,\"OUTPUT_END_DISTRIBUTIONS/\", sep=\"\")\n\n#init plot variables\nnbins = 30\n\n#loading packages which will be used in the following calculations\nlibrary(ggplot2)\nlibrary(plyr)\n\n#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#\n#~~~~~~~~~~ start programme ~~~~~~~~~~#\n#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#\n\n# Loading Excel results file.csv\nresults<-read.csv(results_csv_inc_path, sep=\",\", header=TRUE, skip=7)\n\n# Loading Excel reference points Blim and Bmax\n# data from NorthSea_HCRinfo_SteveUpdate.xlsx\n# column 4 is the index which points to the right species found\n# in the Results.csv file above\nblim.bpa<-read.csv(biomrefs_csv_inc_path,sep=\",\", header=TRUE)\n\n#######################################\n####### DATA MANIPULATION #############\n####### t/km^2 into kTons #############\n##### in entire North Sea #############\n#######################################\n#adding extra colum to facilitate further manipulation\nresults$HCR<-as.character(results$Strategy)\nStrategyNames = c(\"high_weak_cod\",\"low_weak_cod\")\nresults$HCR[results$HCR==StrategyNames[1]]<-\"HCR1\"\nresults$HCR[results$HCR==StrategyNames[2]]<-\"HCR2\"\n\n\n# Transforming Biomass and catch from t/km^2 into 1000 t and add as another column to the data\n# to convert minimum biomass and catch from  t/km2 into 1000t (ie. kTon) multiply by the area\n# of North Sea = 570000 km2 and divide by 1000, i.e. multiply by 570\nresults.t<- as.matrix(as.numeric(results$Value)) # biomass and catch in t/km^2\nresults.t<-results.t* 570\nresults.t<-cbind(results, results.t)\ncolnames(results.t)<-c(\"Iteration\",\"Strategy\",\"GroupNumber\", \"GroupName\",\"ResultName\",\"value_t\",\"HCR\",\"tx1K_km2\")\n\n# some data in results.t is very large (when the code didn't converge) -> let's cut this output\n#results.t<-subset(results.t, tx1K_km2<1000000)\n\n# IMPORTANT: from now we are working with results.t, last column contains biomass and catch in kTons \n#head(results.t)\n\n#######################################\n##########  SELECT RESULTS  ###########\n#######################################\n\n\n# which ResultNames do we have in Results.csv?\nresult.names<-levels(results.t$ResultName)\n#select ResultName\nresult.index<-result.name.select(result.names)\t# returns index of chosen ResultName in result.names\n\n#######################################\n########## SELECT SPECIES #############\n#######################################\n### minimum biomass reference points, percentages re Bli and Bpa, catch quantiles\nif (result.names[result.index]==\"BiomassEnd\" || result.names[result.index]==\"BiomassMin\" ||\n    result.names[result.index]==\"DiscardMortalities\" || result.names[result.index]==\"DiscardSurvivals\" ||\n    result.names[result.index]==\"Landings\"){\n  # which species do we have in Results.csv?\n  species_in_resultsfile<-levels(results.t[4][,1]) # they are ordered alphabetically \n  # which species do we have in blim.bpa.csv\n  species_in_biomrefsfile<-levels(blim.bpa[,1])\n  \n  #select species\n  species.index<-as.numeric(species.select(species_in_resultsfile, species_in_biomrefsfile))\n  \n  # minimum biomass, catch etc. in ton x10^3 (=1kTon) for all North Sea\n  results.species<-subset(results.t, ResultName==result.names[result.index] & GroupName==species_in_resultsfile[species.index[1]])\n  \n}\n\n#######################################\n########## SELECT METHOD ##############\n#######################################\n### data related to fishery methods require a different approach to fish stock data\nif (result.names[result.index]==\"TotalEndValue\"){\n  # which methods do we have in Results.csv?\n  # this requires several steps, don't ask why this is in R!\n  temp1<-subset(results.t, ResultName==result.names[result.index]) # subset containing TotalEndValue\n  temp2<-temp1[,4] # 3rd column contains fisheries method\n  temp3<-levels(droplevels(temp2)) # now drop the fish stock levels which we don't need.\n  \n  method.index<-as.numeric(method.name.select(temp3))\n  results.species<-subset(results.t, ResultName==result.names[result.index] & GroupName==temp3[method.index])\n}\n\n##checking functions\n#head(results.species)\n#range(results.species$tx1K_km2)\n\n#######################################\n######### RESULTS STATISTICS ##########\n#######################################\n\n### mean, median and quantiles of biomass, catch etc.\nResultMean.species <- ddply(results.species, .(Strategy), summarise, mean.species=mean(tx1K_km2))\nResultMean.species\nResultMedian.species<-ddply(results.species, .(Strategy), summarise, median.species=median(tx1K_km2))\nResultMedian.species\nResultQuantile.species<-ddply(results.species, .(Strategy), summarise, quantile.species=quantile(tx1K_km2))\nResultQuantile.species\n\nUniqueGroupNames = unique(subset(results.t, ResultName==\"BiomassMin\")$GroupName)\nUniqueFleetNames = unique(subset(results.t, ResultName==\"TotalEndValue\")$GroupName)\nUniqueStrategyNames = levels(results$Strategy)\nNumberUniqueStrategyNames = length(UniqueStrategyNames)\n\nn=list()\n\n\nif (result.names[result.index]==\"BiomassEnd\" || result.names[result.index]==\"BiomassMin\" ||\n    result.names[result.index]==\"DiscardMortalities\" || result.names[result.index]==\"DiscardSurvivals\" ||\n    result.names[result.index]==\"Landings\"){\n  ### Harvest Control Rule 1 data\n  for (iStrategy in 1:NumberUniqueStrategyNames){\n    n[iStrategy]<-list(as.data.frame(subset(results.t,ResultName==result.names[result.index] & GroupName==species_in_resultsfile[species.index[1]] & Strategy==UniqueStrategyNames[iStrategy])))\n  }\n  #n1<-as.data.frame(subset(results.t,ResultName==result.names[result.index] & GroupName==species_in_resultsfile[species.index[1]] & HCR==\"HCR1\"))\n  \n  ### Harvest Control Rule 2\n  #n2<-as.data.frame(subset(results.t,ResultName==result.names[result.index] & GroupName==species_in_resultsfile[species.index[1]] & HCR==\"HCR2\"))\n} else {\n  ### Harvest Control Rule 1 data\n  for (iStrategy in 1:NumberUniqueStrategyNames){\n    n[iStrategy]<-list(as.data.frame(subset(results.t,ResultName==result.names[result.index] & GroupName==temp3[method.index] & Strategy==UniqueStrategyNames[iStrategy])))\n  }\n  #n1<-as.data.frame(subset(results.t,ResultName==result.names[result.index] & GroupName==temp3[method.index] & HCR==\"HCR1\"))\n  \n  ### Harvest Control Rule 2\n  #n2<-as.data.frame(subset(results.t,ResultName==result.names[result.index] & GroupName==temp3[method.index] & HCR==\"HCR2\"))\n}\n\n### Blim, Bmax and catch reference points\n# reference points Blim and Bmax from excel file (NorthSea_HCRinfo_SteveUpdate.xlsx)                                                  \nif (result.names[result.index]==\"BiomassEnd\" || result.names[result.index]==\"BiomassMin\" ||\n    result.names[result.index]==\"DiscardMortalities\" || result.names[result.index]==\"DiscardSurvivals\" ||\n    result.names[result.index]==\"Landings\"){\n\n  Blim.species<-as.vector(subset(blim.bpa, Group==levels(blim.bpa[,1])[species.index[2]])[1,2])\n  Bpa.species<-as.vector(subset(blim.bpa, Group==levels(blim.bpa[,1])[species.index[2]])[1,3])\n  #Catch.species<-as.vector(subset(blim.bpa, Group==levels(blim.bpa[,1])[species.index[2]])[1,5])\n  \n  ### percentage of iterations=trials bigger than the Blim for each harvest control rules strategy\n  # note that in the following 3 lines hc1 was capitalised HC1\n  SumBlim=list()  #The number of results that are above the Blim\n  percBlim=list() #The percentage of the results above Blim\n  SumBpa=list()   #The number of results that are above Bpa\n  percBpa=list()  #The percentage of the results above Bpa\n  \n  for (iStrategy in 1:NumberUniqueStrategyNames){\n    SumBlim[iStrategy]<-list(sum(n[[iStrategy]]$tx1K_km2>=Blim.species))  # percentage of \"trials\" bigger than Blim \n    percBlim[iStrategy]<-list((SumBlim[[iStrategy]]*100)/nrow(n[[iStrategy]]))\n    percBlim[iStrategy]\n    \n    #percentage of iterations=trials bigger than the Bpa for each harvest control rules strategy\n    #Harvest Control Rule\n    SumBpa[iStrategy]<-list(sum(n[[iStrategy]]$tx1K_km2>=Bpa.species))  # percentage of \"trials\" bigger than Bpa \n    percBpa[iStrategy]<-list((SumBpa[[iStrategy]]*100)/nrow(n[[iStrategy]]))\n    percBpa[iStrategy]\n    \n    #harvest Control Rule 2\n    #SumBpa.hc2<-(sum(n2$tx1K_km2>=Bpa.species))\t# percentage of \"trials\" bigger than Bpa\n    #percBpa.hc2<-(SumBpa.hc2*100)/nrow(n2)\n    #percBpa.hc2\n    \n  }\n  \n  #SumBlim.hc1<-(sum(n1$tx1K_km2>=Blim.species))\t# percentage of \"trials\" bigger than Blim \n  #percBlim.hc1<-(SumBlim.hc1*100)/nrow(n1)\n  #percBlim.hc1\n  \n  #SumBlim.hc2<-(sum(n2$tx1K_km2>=Blim.species))\t# percentage of \"trials\" bigger than Blim \n  #percBlim.hc2<-(SumBlim.hc2*100)/nrow(n2)\n  #percBlim.hc2\n  \n}\n\n#######################################\n########## PLOT PREPARATION ###########\n########### KERNEL DENSITTY ###########\n#######################################\n\n# adding the individual info of each facet graph in form of data frames\n\n# find appropriate axes scales\nif (result.names[result.index]==\"BiomassEnd\" || result.names[result.index]==\"BiomassMin\" ||\n    result.names[result.index]==\"DiscardMortalities\" || result.names[result.index]==\"DiscardSurvivals\" ||\n    result.names[result.index]==\"Landings\") {\n  #max.axes.1=scale.axes(density(n1$tx1K_km2), ResultMedian.species, Blim.species, Bpa.species)\n  #max.axes.2=scale.axes(density(n2$tx1K_km2), ResultMedian.species, Blim.species, Bpa.species)\n  max.axis = scale.axes.hist(n, ResultMedian.species, Blim.species, Bpa.species, nbins, NumberUniqueStrategyNames)\n  #max.axes.2 = scale.axes.hist(n2$tx1K_km2, ResultMedian.species, Blim.species, Bpa.species,nbins)\n} else {\t# we are plotting catch data which plots quantile lines\n  max.axis = scale.axes.hist(n, ResultMedian.species, ResultQuantile.species[4,2], ResultQuantile.species[7,2], nbins, NumberUniqueStrategyNames)\n  #max.axes.2=scale.axes.hist(n2$tx1K_km2, n2$tx1K_km2, ResultMedian.species,, ResultQuantile.species[7,2], nbins)\n  \n}\n\n# choose the maximum values of x- and y-axis scales to plot both graphs on the same scale later\n#max.xaxis<-max(max.axes.1[1], max.axes.2[1])\n#max.yaxis<-max(max.axes.1[2], max.axes.2[2])\n\n# xaxis labels for the different ResultNames\nxaxis.label<-c(\"End Biomass (1000 t)\", \"Minimum Biomass (1000 t)\", \"Final Catch (1000 t)\", \"Total End Value (1000 Euros)\")\n\n# generate formated strings from numerical values for ResultMedian, percentages larger than Blim and Bpa and Catch\nResultMedian.species.hcr.string = list()\nfor (iStrategy in 1:NumberUniqueStrategyNames){\n  ResultMedian.species.hcr.string[iStrategy]<-list(format(ResultMedian.species[iStrategy,2], digits=3, nsmall=0))\n}\n#ResultMedian.species.hc1.string<-format(ResultMedian.species[1,2], digits=3, nsmall=0)\n#ResultMedian.species.hc2.string<-format(ResultMedian.species[2,2], digits=3, nsmall=0)\n\nLarger.than.Blim.hcr.string = list()\nLarger.than.Bpa.hcr.string = list()\nif (result.names[result.index]==\"BiomassEnd\" || result.names[result.index]==\"BiomassMin\" ||\n    result.names[result.index]==\"DiscardMortalities\" || result.names[result.index]==\"DiscardSurvivals\" ||\n    result.names[result.index]==\"Landings\"){ # i.e. 1 or 2\n  for (iStrategy in 1:NumberUniqueStrategyNames){\n    Larger.than.Blim.hcr.string[iStrategy]<-format(percBlim[iStrategy], digits=1, nsmall=0)\n    Larger.than.Bpa.hcr.string[iStrategy]<-format(percBpa[iStrategy], digits=1, nsmall=0)\n  }\n  #Larger.than.Blim.hc1.string<-format(percBlim.hc1, digits=1, nsmall=0)\n  #Larger.than.Blim.hc2.string<-format(percBlim.hc2, digits=1, nsmall=0)\n  #Larger.than.Bpa.hc1.string<-format(percBpa.hc1, digits=1, nsmall=0)\n  #Larger.than.Bpa.hc2.string<-format(percBpa.hc2, digits=1, nsmall=0)\n}  \n# do i need the following?\n#Catch.string<-format(percBlim.hc1, digits=1, nsmall=0)\n\n# generate the label positions according to ResultMedian, Blim, Bpa and catch quantiles\nbmedian.label.xpos=list()\nfor (iStrategy in 1:NumberUniqueStrategyNames){\n  bmedian.label.xpos[[iStrategy]]<-c(as.numeric(format(ResultMedian.species[iStrategy,2], digits=1, nsmall=0)))\n  \n}\n#bmedian.label.xpos<-c(as.numeric(format(ResultMedian.species[1,2], digits=1, nsmall=0)),as.numeric(format(ResultMedian.species[2,2], digits=1, nsmall=0)))\nbmedian.label.ypos<-c(0.75*as.numeric(max.axis$y))\n\nif (result.names[result.index]==\"BiomassEnd\" || result.names[result.index]==\"BiomassMin\" ||\n    result.names[result.index]==\"DiscardMortalities\" || result.names[result.index]==\"DiscardSurvivals\" ||\n    result.names[result.index]==\"Landings\"){ # i.e. 1 or 2\n  blim.label.xpos<-c(Blim.species)\n  blim.label.ypos<-c(0.5*as.numeric(max.axis$y))\n  \n  bpa.label.xpos<-c(Bpa.species)\n  bpa.label.ypos<-c(0.25*as.numeric(max.axis$y))\n}\n\nlower.quantile.label.xpos<-vector()\nupper.quantile.label.xpos<-vector()\n\nfor (iStrategy in 1:NumberUniqueStrategyNames){\n  lower.quantile.label.xpos[iStrategy]<-c(ResultQuantile.species[(5*iStrategy-3),2])\n  upper.quantile.label.xpos[iStrategy]<-c(ResultQuantile.species[(5*iStrategy-1),2])\n}\n\nlower.quantile.label.ypos<-c(0.25*as.numeric(max.axis$y))\nupper.quantile.label.ypos<-c(0.75*as.numeric(max.axis$y))\n\n#lower.quantile.label.xpos<-c(ResultQuantile.species[2,2], ResultQuantile.species[7,2])\n#lower.quantile.label.ypos<-c(0.25*as.numeric(max.axis$y))\n#upper.quantile.label.xpos<-c(ResultQuantile.species[4,2], ResultQuantile.species[9,2])\n#upper.quantile.label.ypos<-c(0.75*as.numeric(max.axis$y))\n\n# position the 4 percentage labels towards the right along the x-axis and at 65% and 75% along y-axis\nlarger.than.xpos<-c(rep(as.numeric(max.axis$x)*.85,NumberUniqueStrategyNames*2))\t\nlarger.than.ypos<-c(as.numeric(max.axis$y)*0.60, as.numeric(max.axis$y)*0.80)\n#larger.than.ypos<-c(as.numeric(max.axis$y)*0.65, as.numeric(max.axis$y)*0.75, as.numeric(max.axis$y)*0.65, as.numeric(max.axis$y)*0.75)\n\n# position the catch label towards the right along the x-axis\ncatch.xpos<-c(max.axis$x*0.55) \ncatch.ypos<-c(max.axis$y*4)\n\nif (result.names[result.index]==\"DiscardMortalities\" || result.names[result.index]==\"DiscardSurvivals\" ||\n    result.names[result.index]==\"Landings\"){\n  # labels for catch plots#####################change HCR 1 and 2 to the name given\n  catch.species3.lab = data.frame()\n  for (iStrategy in 1:NumberUniqueStrategyNames){\n    catch.species3.lab<- rbind(catch.species3.lab, data.frame(x = catch.xpos, # x = c(rep(270, 2)), \n                                                              y = catch.ypos, # y = c(0.0075,0.0075),\n                                                              #lab = paste('Median Catch (1991-2007)=', Catch.species,'(*1000 t)'),\n                                                              Strategy= UniqueStrategyNames[[iStrategy]]))\n  }\n  \n  catch.species3.lab$lab <- as.character(catch.species3.lab$lab)    # convert labels to character\n}\n###############################\n\nif (result.names[result.index]==\"BiomassEnd\" || result.names[result.index]==\"BiomassMin\" ||\n    result.names[result.index]==\"DiscardMortalities\" || result.names[result.index]==\"DiscardSurvivals\" ||\n    result.names[result.index]==\"Landings\"){ # i.e. 1 or 2\n  # labels \"% trials larger than Blim/Bpa\" \n  blim.species3.lab=data.frame()\n  bpa.species3.lab=data.frame()\n  blim.species5.lab=data.frame()\n  bpa.species5.lab=data.frame()\n  for (iStrategy in 1:NumberUniqueStrategyNames){\n    blim.species3.lab<- rbind(blim.species3.lab, data.frame(x = larger.than.xpos[iStrategy*2-1], # c(rep(1000, 4)), \n                                                            y = larger.than.ypos[1], # c(0.0015, 0.0010,0.0015,0.0010),\n                                                            lab = paste(Larger.than.Blim.hcr.string[[iStrategy]],'% trials > Blim'),\n                                                            Strategy= UniqueStrategyNames[[iStrategy]]))\n    \n    \n    bpa.species3.lab<- rbind(bpa.species3.lab, data.frame(x = larger.than.xpos[iStrategy*2], # c(rep(1000, 4)), \n                                                          y = larger.than.ypos[2], # c(0.0015, 0.0010,0.0015,0.0010),\n                                                          lab = paste(Larger.than.Bpa.hcr.string[[iStrategy]],'% trials > Bpa'),\n                                                          Strategy= UniqueStrategyNames[[iStrategy]]))\n    \n    blim.species5.lab <- rbind(blim.species5.lab, data.frame(x= blim.label.xpos, y = blim.label.ypos, lab='Blim', Strategy=UniqueStrategyNames[[iStrategy]]))\n    bpa.species5.lab <- rbind(bpa.species5.lab, data.frame(x= bpa.label.xpos, y = bpa.label.ypos, lab='Bpa', Strategy=UniqueStrategyNames[[iStrategy]]))\n    \n    #blim.species5.lab[[iStrategy]]<- data.frame(x= c(blim.label.xpos, bpa.label.xpos), y = c(blim.label.ypos, bpa.label.ypos), lab=c('Blim', 'Bpa'), Strategy=UniqueStrategyNames[[iStrategy]] )\n    #blim.species5.lab[[iStrategy]]$lab <- as.character(b.species5.lab[[iStrategy]]$lab)\n  }\n  blim.species3.lab$lab <- as.character(blim.species3.lab$lab)    # convert labels to character\n  bpa.species3.lab$lab <- as.character(bpa.species3.lab$lab)\n  blim.species5.lab$lab <- as.character(blim.species5.lab$lab)\n  bpa.species5.lab$lab <- as.character(bpa.species5.lab$lab)\n  #b.species3.lab[iStrategy]<- data.frame(x = c(larger.than.xpos[iStrategy*2-1],larger.than.xpos[iStrategy*2]), # c(rep(1000, 4)), \n  #                 y = larger.than.ypos, # c(0.0015, 0.0010,0.0015,0.0010),\n  #                 lab = c(paste(Larger.than.Blim.hcr.string,'% trials > Blim'), paste(Larger.than.Bpa.hcr.string,'% trials > Bpa'), paste(Larger.than.Blim.hc2.string,'% trials > Blim'), paste(Larger.than.Bpa.hc2.string,'% trials > Bpa')),\n  #                 Strategy= c(StrategyNames[1], StrategyNames[1], StrategyNames[2], StrategyNames[2]))\n  #b.species3.lab$lab <- as.character(b.species3.lab$lab)    # convert labels to character\n  \n  # labels for Blim and Bpa lines\n  #b.species5.lab<- data.frame(x= c(blim.label.xpos, bpa.label.xpos), y = c(blim.label.ypos, bpa.label.ypos), lab=c('Blim', 'Bpa'), Strategy=UniqueStrategyNames[[iStrategy]] )\n  #b.species5.lab$lab <- as.character(b.species5.lab$lab)    # convert labels to character\n  \n}\n\nb.species4.lab=data.frame()\nc.species4.lab=data.frame()\nc.species5.lab=data.frame()\nc.species6.lab=data.frame()\n\nfor (iStrategy in 1:NumberUniqueStrategyNames){\n  b.species4.lab <- rbind(b.species4.lab, data.frame(x=bmedian.label.xpos[[iStrategy]], y=bmedian.label.ypos, lab='B median', Strategy=UniqueStrategyNames[[iStrategy]]))\n  c.species4.lab <- rbind(c.species4.lab, data.frame(x=bmedian.label.xpos[[iStrategy]], y=bmedian.label.ypos, lab='Median', Strategy= UniqueStrategyNames[[iStrategy]]))\n  c.species5.lab <- rbind(c.species5.lab,data.frame(x=lower.quantile.label.xpos[[iStrategy]], y = lower.quantile.label.ypos, lab=c('LQ'), Strategy= UniqueStrategyNames[[iStrategy]]))\n  c.species6.lab <- rbind(c.species6.lab, data.frame(x=upper.quantile.label.xpos[[iStrategy]], y = upper.quantile.label.ypos, lab=c('UQ'), Strategy= UniqueStrategyNames[[iStrategy]]))\n}\n\nb.species4.lab$lab <- as.character(b.species4.lab$lab)    # convert labels to character\nc.species4.lab$lab <- as.character(c.species4.lab$lab)    # convert labels to character\nc.species5.lab$lab <- as.character(c.species5.lab$lab)    # convert labels to character\nc.species6.lab$lab <- as.character(c.species6.lab$lab)    # convert labels to character\n\n# labels for BMedian lines\n#b.species4.lab<- data.frame(x=bmedian.label.xpos, y=bmedian.label.ypos, lab=c('B median', 'B median'), Strategy=UniqueStrategyNames[[iStrategy]])\n#b.species4.lab$lab <- as.character(b.species4.lab$lab)    # convert labels to character\n\n# labels for CMedian lines\n#c.species4.lab<- data.frame(x=bmedian.label.xpos, y=bmedian.label.ypos, lab=c('Median', 'Median'), Strategy= UniqueStrategyNames[[iStrategy]])\n#c.species4.lab$lab <- as.character(c.species4.lab$lab)    # convert labels to character\n\n# labels for quantile lines\n#c.species5.lab<- data.frame(x=lower.quantile.label.xpos, y = lower.quantile.label.ypos, lab=c('LQ', 'LQ'), Strategy= c(StrategyNames[1],StrategyNames[2]))\n#c.species5.lab$lab <- as.character(c.species5.lab$lab)    # convert labels to character\n#c.species6.lab<- data.frame(x=upper.quantile.label.xpos, y = upper.quantile.label.ypos, lab=c('UQ', 'UQ'), Strategy= c(StrategyNames[1],StrategyNames[2]))\n#c.species6.lab$lab <- as.character(c.species6.lab$lab)    # convert labels to character\n\n#######################################\n######## KERNEL DENSITTY PLOT #########\n#######################################\nif (result.names[result.index]==\"BiomassEnd\" || result.names[result.index]==\"BiomassMin\" ||\n    result.names[result.index]==\"DiscardMortalities\" || result.names[result.index]==\"DiscardSurvivals\" ||\n    result.names[result.index]==\"Landings\"){ # i.e. 1 or 2\n  blim.bpa.xaxis<-data.frame(blim.axis=Blim.species, bpa.axis=Bpa.species)\t# we seem to need the position of the \n  # blim and bpa lines as a data.frame to plot them in the same way as we plot the medan line.\n}\n#quantile.xaxis<-data.frame(Strategy= c( StrategyNames[1],StrategyNames[2]), lq.axis=c(ResultQuantile.species[2,2], ResultQuantile.species[7,2]), uq.axis=c(ResultQuantile.species[4,2], ResultQuantile.species[9,2]))\nquantile.xaxis=data.frame()\nfor (iStrategy in 1:length(UniqueStrategyNames)){\n  quantile.xaxis<-rbind(quantile.xaxis,data.frame(Strategy=UniqueStrategyNames[iStrategy], lq.axis=ResultQuantile.species[5*iStrategy-3,2], uq.axis=ResultQuantile.species[5*iStrategy-1,2]))\n}\n\n\nresults.species = Add_Reg(results.species)\nblim.species3.lab = Add_Reg(blim.species3.lab)\nbpa.species3.lab = Add_Reg(bpa.species3.lab)\nResultMedian.species = Add_Reg(ResultMedian.species)\nblim.bpa.xaxis = Add_Reg(blim.bpa.xaxis)\nb.species4.lab = Add_Reg(b.species4.lab)\nbpa.species5.lab = Add_Reg(bpa.species5.lab)\nblim.species5.lab = Add_Reg(blim.species5.lab)\n\n#Reorder Strategy levels so that regulation types are plotted in specified order\nblim.species3.lab$Regulation = factor(blim.species3.lab$Regulation, levels = c(\"Weakest stock\", \"Selective\", \"Highest value\", \"Other\"))\nOrderedStrategies = as.vector(blim.species3.lab[order(blim.species3.lab$Regulation),]$Strategy)\nresults.species <- within(results.species, Strategy <- factor(Strategy, levels= OrderedStrategies))\n\nif (result.names[result.index]==\"BiomassEnd\" || result.names[result.index]==\"BiomassMin\"){ # i.e. 1 or 2\n  if (Blim.species!=0){\n    \n    B_SPECIES = ggplot(results.species,aes(x=tx1K_km2, fill=Regulation)) + geom_histogram(binwidth = (max.axis$x)/nbins, aes(y=..density..))\n    B_SPECIES = B_SPECIES + facet_wrap(~Strategy, ncol=1)\n    B_SPECIES = B_SPECIES + ylab(\"Density\")+xlab(xaxis.label[result.index]) #xlab(\"Minimum Biomass (1000 t)\")\n    B_SPECIES = B_SPECIES + labs(title=species_in_resultsfile[species.index[1]])\n    B_SPECIES = B_SPECIES + theme(strip.text = element_text(size=6), panel.background = element_blank(), panel.grid.major=element_blank(), panel.grid.minor=element_blank(),axis.line=element_line(colour=\"Black\"), axis.text=element_text(colour=\"Black\", size=6))\n    B_SPECIES = B_SPECIES + geom_text(data = blim.species3.lab, aes(x = x, y = y, label = lab), size = 2)\n    B_SPECIES = B_SPECIES + geom_text(data = bpa.species3.lab, aes(x = x, y = y, label = lab), size = 2)\n    B_SPECIES = B_SPECIES + coord_cartesian(ylim = c(0, as.numeric(max.axis$y)*1.1), xlim = c(0, as.numeric(max.axis$x)))\n    # median, Blim and Bpa lines and labels\n    B_SPECIES = B_SPECIES + geom_vline(data=ResultMedian.species, aes(xintercept=median.species),linetype=\"dotted\", size=0.15)\n    B_SPECIES = B_SPECIES + geom_vline(data=blim.bpa.xaxis, aes(xintercept=blim.axis),linetype=\"dotdash\", size=0.15)\n    B_SPECIES = B_SPECIES + geom_vline(data=blim.bpa.xaxis, aes(xintercept=bpa.axis),linetype=\"longdash\", size=0.15)\n    B_SPECIES = B_SPECIES + geom_text(data = b.species4.lab, aes(x = x, y = y, label = lab), size = 2, angle=90, vjust=-0.5)\n    B_SPECIES = B_SPECIES + geom_text(data = bpa.species5.lab, aes(x = x, y = y, label = lab), size = 2, angle=90, vjust=-0.5)\n    B_SPECIES = B_SPECIES + geom_text(data = blim.species5.lab, aes(x = x, y = y, label = lab), size = 2, angle=90, vjust=-0.5)\n  } else {\n    #B_SPECIES<-ggplot(results.species,aes(x=tx1K_km2)) + geom_histogram(fill=\"red\", binwidth = (max.axis$x)/nbins, aes(y=..density..)) +\n    B_SPECIES = ggplot(results.species,aes(x=tx1K_km2, fill=Regulation)) + geom_histogram(binwidth = (max.axis$x)/nbins, aes(y=..density..))\n    B_SPECIES = B_SPECIES + facet_wrap(~Strategy, ncol=1)\n    B_SPECIES = B_SPECIES + ylab(\"Density\")+xlab(xaxis.label[result.index]) #xlab(\"Minimum Biomass (1000 t)\")\n    B_SPECIES = B_SPECIES + labs(title=species_in_resultsfile[species.index[1]])\n    B_SPECIES = B_SPECIES + theme(panel.background = element_blank(), panel.grid.major=element_blank(), panel.grid.minor=element_blank(),axis.line=element_line(colour=\"Black\"), axis.text=element_text(colour=\"Black\", size=6), strip.text = element_text(size=6))\n    B_SPECIES = B_SPECIES + coord_cartesian(ylim = c(0, as.numeric(max.axis$y)*1.1), xlim = c(0, as.numeric(max.axis$x)))\n    # median, Blim and Bpa lines and labels\n    B_SPECIES = B_SPECIES + geom_vline(data=ResultMedian.species, aes(xintercept=median.species),linetype=\"dotted\", size=0.7)\n    B_SPECIES = B_SPECIES + geom_vline(data=blim.bpa.xaxis, aes(xintercept=blim.axis),linetype=\"dotdash\", size=0.7)\n    B_SPECIES = B_SPECIES + geom_vline(data=blim.bpa.xaxis, aes(xintercept=bpa.axis),linetype=\"longdash\", size=0.7)\n    B_SPECIES = B_SPECIES + geom_text(data = b.species4.lab, aes(x = x, y = y, label = lab), size = 2, angle=90, vjust=-0.5)\n    B_SPECIES = B_SPECIES + geom_text(data = bpa.species5.lab, aes(x = x, y = y, label = lab), size = 2, angle=90, vjust=-0.5)\n    B_SPECIES = B_SPECIES + geom_text(data = blim.species5.lab, aes(x = x, y = y, label = lab), size = 2, angle=90, vjust=-0.5)\n\n  }\n  \n  B_SPECIES\n  ggsave(B_SPECIES, file=paste(output_folder, species_in_resultsfile[species.index[1]],\"_\",result.names[result.index],\".png\", sep=\"\"), width=4, height=length(UniqueStrategyNames)*1.5, limitsize = FALSE)\n}  \n\n\n\nif (result.names[result.index]==\"DiscardMortalities\" || result.names[result.index]==\"DiscardSurvivals\" ||\n    result.names[result.index]==\"Landings\"){ \n  C_SPECIES<-ggplot(results.species,aes(x=tx1K_km2)) + geom_histogram(fill=\"red\", binwidth = (max.axis$x)/nbins, aes(y=..density..)) +\n    facet_wrap(~Strategy, ncol=1)+\n    ylab(\"Density\")+xlab(\"Biomass (1000 t)\")+ \n    labs(title=species_in_resultsfile[species.index[1]]) +\n    theme(panel.background = element_blank(), panel.grid.major=element_blank(), panel.grid.minor=element_blank(),axis.line=element_line(colour=\"Black\"), axis.text=element_text(colour=\"Black\"))+\n    geom_text(data = catch.species3.lab, aes(x = x, y = y, label = lab), size = 3) +\n    theme(legend.position = \"none\") + \n    #scale_x_continuous(limits=c(0,as.numeric(max.xaxis)))+ scale_y_continuous(limits=c(0,as.numeric(max.yaxis))) +\n    #median and quantile lines and labels \n    coord_cartesian(ylim = c(0, as.numeric(max.axis$y)*1.1), xlim = c(0, as.numeric(max.axis$x))) +\n    geom_vline(data=ResultMedian.species, aes(xintercept=median.species),linetype=\"dotted\", size=0.7) +\n    geom_vline(data=quantile.xaxis, aes(xintercept=lq.axis),linetype=\"dashed\", size=0.7) + \n    geom_vline(data=quantile.xaxis, aes(xintercept=uq.axis),linetype=\"dashed\", size=0.7) + \n    \n    #  geom_vline(data=LQ.species, aes(xintercept=quantile.species),linetype=\"dashed\", size=0.7) + \n    #  geom_vline(data=UQ.species, aes(xintercept=quantile.species),linetype=\"dashed\", size=0.7) + \n    \n    #  geom_text(data = NULL,size=4, x = 40, y = 0.01, label = \"LQ\") +\n    #  geom_text(data = NULL,size=4, x = 67, y = 0.0075, label = \"median\") +\n    #  geom_text(data = NULL,size=4, x = 98, y = 0.01, label = \"UQ\")\n    geom_text(data = c.species4.lab, aes(x = x, y = y, label = lab), size = 2, angle=90, vjust=-0.5)+\n    geom_text(data = c.species5.lab, aes(x = x, y = y, label = lab), size = 2, angle=90, vjust=-0.5)+\n    geom_text(data = c.species6.lab, aes(x = x, y = y, label = lab), size = 2, angle=90, vjust=-0.5)\n  #annotate(\"segment\", x = 77.6, xend = 77.6, y =0, yend = 10,colour = \"black\", linetype=\"longdash\")+\n  #annotate(\"text\", x = 80, y = 0.005, label = \"Median Historical Catch\", colour=\"black\", size=4) +   \n  C_SPECIES\n  ggsave(C_SPECIES, file=paste(sep=\"\", output_folder, species_in_resultsfile[species.index[1]],\"_\",result.names[result.index],\".jpg\"), dpi=300, width=4, height=length(UniqueStrategyNames))\n}  \n\n\n\nif (result.names[result.index]==\"TotalEndValue\"){ \n  T_SPECIES<-ggplot(results.species,aes(x=tx1K_km2)) + geom_histogram(fill=\"red\", binwidth = (max.axis$x)/nbins, aes(y=..density..)) +\n    facet_wrap(~Strategy, ncol=1)+ylab(\"Density\")+xlab(\"Total End Value (1000 Euros/km^2)\")+ labs(title=temp3[method.index]) +\n    theme(panel.background = element_blank(), panel.grid.major=element_blank(), panel.grid.minor=element_blank(),axis.line=element_line(colour=\"Black\"), axis.text=element_text(colour=\"Black\"))+\n    #    geom_text(data = catch.species3.lab, aes(x = x, y = y, label = lab), size = 4) +\n    theme(legend.position = \"none\")+ \n    #scale_x_continuous(limits=c(0,as.numeric(max.xaxis)))+ scale_y_continuous(limits=c(0,as.numeric(max.yaxis))) +\n    #median and quantile lines and labels \n    geom_vline(data=ResultMedian.species, aes(xintercept=median.species),linetype=\"dotted\", size=0.7) +\n    geom_vline(data=quantile.xaxis, aes(xintercept=lq.axis),linetype=\"dashed\", size=0.7) + \n    geom_vline(data=quantile.xaxis, aes(xintercept=uq.axis),linetype=\"dashed\", size=0.7) + \n    \n    #  geom_vline(data=LQ.species, aes(xintercept=quantile.species),linetype=\"dashed\", size=0.7) + \n    #  geom_vline(data=UQ.species, aes(xintercept=quantile.species),linetype=\"dashed\", size=0.7) + \n    \n    #  geom_text(data = NULL,size=4, x = 40, y = 0.01, label = \"LQ\") +\n    #  geom_text(data = NULL,size=4, x = 67, y = 0.0075, label = \"median\") +\n    #  geom_text(data = NULL,size=4, x = 98, y = 0.01, label = \"UQ\")\n    geom_text(data = c.species4.lab, aes(x = x, y = y, label = lab), size = 2, angle=90, vjust=-0.5)+\n    geom_text(data = c.species5.lab, aes(x = x, y = y, label = lab), size = 2, angle=90, vjust=-0.5)+\n    geom_text(data = c.species6.lab, aes(x = x, y = y, label = lab), size = 2, angle=90, vjust=-0.5)\n  #annotate(\"segment\", x = 77.6, xend = 77.6, y =0, yend = 10,colour = \"black\", linetype=\"longdash\")+\n  #annotate(\"text\", x = 80, y = 0.005, label = \"Median Historical Catch\", colour=\"black\", size=4) +   \n  T_SPECIES\n  ggsave(T_SPECIES, file=paste(temp3[method.index[1]],\"_\",result.names[result.index],\".jpg\", sep=\"\"), dpi=300, width=4, height=length(UniqueStrategyNames))\n}  \n\n# if (result.index<3){ # i.e. 1 or 2\n#   B_SPECIES<-ggplot(results.species,aes(x=tx1K_km2)) + geom_density(aes(group=Strategy, colour=Strategy)) +\n#     facet_wrap(~Strategy, ncol=1)+\n#     ylab(\"Frequency\")+xlab(xaxis.label[result.index]) + #xlab(\"Minimum Biomass (1000 t)\")\n#     labs(title=species_in_resultsfile[species.index[1]]) +\n#     theme(panel.background = element_blank(), panel.grid.major=element_blank(), panel.grid.minor=element_blank(),axis.line=element_line(colour=\"Black\"), axis.text=element_text(colour=\"Black\"))+\n#     geom_text(data = b.species3.lab, aes(x = x, y = y, label = lab), size = 4) +\n#     theme(legend.position = \"none\") + scale_x_continuous(limits=c(0,as.numeric(max.xaxis))) + scale_y_continuous(limits=c(0,as.numeric(max.yaxis))) +\n#     # median, Blim and Bpa lines and labels\n#     geom_vline(data=ResultMedian.species, aes(xintercept=median.species),linetype=\"dotted\", size=0.7) +\n#     geom_vline(data=blim.bpa.xaxis, aes(xintercept=blim.axis),linetype=\"dotdash\", size=0.7) +\n#     geom_vline(data=blim.bpa.xaxis, aes(xintercept=bpa.axis),linetype=\"longdash\", size=0.7) +\n#     geom_text(data = b.species4.lab, aes(x = x, y = y, label = lab), size = 4) +\n#     geom_text(data = b.species5.lab, aes(x = x, y = y, label = lab), size = 4)\n#   \n#   B_SPECIES\n#   \n#   ggsave(B_SPECIES, file=paste(species_in_resultsfile[species.index[1]],\"_\",result.names[result.index],\".jpg\"), dpi=600)\n# }  \n# \n# \n# \n# if (result.index==3){ \n#   C_SPECIES<-ggplot(results.species,aes(x=tx1K_km2)) + geom_density(aes(group=Strategy, colour=Strategy)) +\n#     facet_wrap(~Strategy, nrow=2, ncol=1)+ylab(\"Frequency\")+xlab(\"Final Catch (1000 t)\")+ labs(title=species_in_resultsfile[species.index[1]]) +\n#     theme(panel.background = element_blank(), panel.grid.major=element_blank(), panel.grid.minor=element_blank(),axis.line=element_line(colour=\"Black\"), axis.text=element_text(colour=\"Black\"))+\n#     geom_text(data = catch.species3.lab, aes(x = x, y = y, label = lab), size = 4) +\n#     theme(legend.position = \"none\")+ \n#     scale_x_continuous(limits=c(0,as.numeric(max.xaxis)))+ scale_y_continuous(limits=c(0,as.numeric(max.yaxis))) +\n#     #median and quantile lines and labels \n#     geom_vline(data=ResultMedian.species, aes(xintercept=median.species),linetype=\"dotted\", size=0.7) +\n#     geom_vline(data=quantile.xaxis, aes(xintercept=lq.axis),linetype=\"dashed\", size=0.7) + \n#     geom_vline(data=quantile.xaxis, aes(xintercept=uq.axis),linetype=\"dashed\", size=0.7) + \n#     \n#     #  geom_vline(data=LQ.species, aes(xintercept=quantile.species),linetype=\"dashed\", size=0.7) + \n#     #  geom_vline(data=UQ.species, aes(xintercept=quantile.species),linetype=\"dashed\", size=0.7) + \n#     \n#     #  geom_text(data = NULL,size=4, x = 40, y = 0.01, label = \"LQ\") +\n#     #  geom_text(data = NULL,size=4, x = 67, y = 0.0075, label = \"median\") +\n#     #  geom_text(data = NULL,size=4, x = 98, y = 0.01, label = \"UQ\")\n#     geom_text(data = c.species4.lab, aes(x = x, y = y, label = lab), size = 4)+\n#     geom_text(data = c.species5.lab, aes(x = x, y = y, label = lab), size = 4)+\n#     geom_text(data = c.species6.lab, aes(x = x, y = y, label = lab), size = 4)\n#   #annotate(\"segment\", x = 77.6, xend = 77.6, y =0, yend = 10,colour = \"black\", linetype=\"longdash\")+\n#   #annotate(\"text\", x = 80, y = 0.005, label = \"Median Historical Catch\", colour=\"black\", size=4) +   \n#   C_SPECIES\n#   ggsave(C_SPECIES, file=paste(species_in_resultsfile[species.index[1]],\"_\",result.names[result.index],\".jpg\"), dpi=600)\n# }  \n# \n# \n# \n# if (result.index==4){ \n#   T_SPECIES<-ggplot(results.species,aes(x=tx1K_km2)) + geom_density(aes(group=Strategy, colour=Strategy)) +\n#     facet_wrap(~Strategy, nrow=2, ncol=1)+ylab(\"Frequency\")+xlab(\"Total End Value (1000 Euros/km^2)\")+ labs(title=temp3[method.index]) +\n#     theme(panel.background = element_blank(), panel.grid.major=element_blank(), panel.grid.minor=element_blank(),axis.line=element_line(colour=\"Black\"), axis.text=element_text(colour=\"Black\"))+\n#     #    geom_text(data = catch.species3.lab, aes(x = x, y = y, label = lab), size = 4) +\n#     theme(legend.position = \"none\")+ \n#     scale_x_continuous(limits=c(0,as.numeric(max.xaxis)))+ scale_y_continuous(limits=c(0,as.numeric(max.yaxis))) +\n#     #median and quantile lines and labels \n#     geom_vline(data=ResultMedian.species, aes(xintercept=median.species),linetype=\"dotted\", size=0.7) +\n#     geom_vline(data=quantile.xaxis, aes(xintercept=lq.axis),linetype=\"dashed\", size=0.7) + \n#     geom_vline(data=quantile.xaxis, aes(xintercept=uq.axis),linetype=\"dashed\", size=0.7) + \n#     \n#     #  geom_vline(data=LQ.species, aes(xintercept=quantile.species),linetype=\"dashed\", size=0.7) + \n#     #  geom_vline(data=UQ.species, aes(xintercept=quantile.species),linetype=\"dashed\", size=0.7) + \n#     \n#     #  geom_text(data = NULL,size=4, x = 40, y = 0.01, label = \"LQ\") +\n#     #  geom_text(data = NULL,size=4, x = 67, y = 0.0075, label = \"median\") +\n#     #  geom_text(data = NULL,size=4, x = 98, y = 0.01, label = \"UQ\")\n#     geom_text(data = c.species4.lab, aes(x = x, y = y, label = lab), size = 4)+\n#     geom_text(data = c.species5.lab, aes(x = x, y = y, label = lab), size = 4)+\n#     geom_text(data = c.species6.lab, aes(x = x, y = y, label = lab), size = 4)\n#   #annotate(\"segment\", x = 77.6, xend = 77.6, y =0, yend = 10,colour = \"black\", linetype=\"longdash\")+\n#   #annotate(\"text\", x = 80, y = 0.005, label = \"Median Historical Catch\", colour=\"black\", size=4) +   \n#   T_SPECIES\n#   ggsave(T_SPECIES, file=paste(temp3[method.index[1]],\"_\",result.names[result.index],\".jpg\", sep=\"\"), dpi=600)\n# }  ",
    "created" : 1484074612451.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2441668878",
    "id" : "C2009D61",
    "lastKnownWriteTime" : 1484229247,
    "last_content_update" : 1484229247413,
    "path" : "C:/Users/Mark/Desktop/MSE_Plugin_Results_Plotting/Run_DistributionPlots.R",
    "project_path" : "Run_DistributionPlots.R",
    "properties" : {
        "source_window_id" : "",
        "tempName" : "Untitled1"
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}