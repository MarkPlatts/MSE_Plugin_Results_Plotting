V4=1:12)
DT
DT[,{print(V2)
plot(V3)
NULL}]
DT[,{print(V2)
plot(V1,V3)
NULL}]
DT
sign(DT$V1)
sign(DT$V1-1)
?sign
?fread
source('~/.active-rstudio-document')
Quota
class(Quota)
Quota = fread("C:/Users/Mark/Dropbox/GAP2_MSE Plugin2/North Sea MultiAnnual Plan/ResultsType1-4_220117/Results/HCRQuota_Targ/HCR_Quota_Targ_Cod (adult)_GroupNo14_FleetNo1.csv",
header = T)
Quota
melt(Quota, id.vars = c("GroupName", "FleetName", "ModelID", "StrategyName", "ResultType"))
melt(Quota, id.vars = c("GroupName", "FleetName", "ModelID", "StrategyName", "ResultType"), variable.name = "Year", value.name = "Quota")
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
merged
Quota
Landings
Landings <- fread("C:/Users/Mark/Dropbox/GAP2_MSE Plugin2/North Sea MultiAnnual Plan/ResultsType1-4_220117/Results/LandingsTrajectories/LandingsYearly_AllGroups_FleetNo1.csv",
header = T)
Landings <- melt(Landings,
id.vars = c("GroupName", "FleetName", "ModelID", "StrategyName", "ResultType"),
variable.name = "Year",
value.name = "Landings")
Landings[, ResultType:=NULL]
Landings
Landings <- fread("C:/Users/Mark/Dropbox/GAP2_MSE Plugin2/North Sea MultiAnnual Plan/ResultsType1-4_220117/Results/LandingsTrajectories/LandingsYearly_Cod (adult)_GroupNo14_FleetNo1.csv",
header = T)
Landings <- melt(Landings,
id.vars = c("GroupName", "FleetName", "ModelID", "StrategyName", "ResultType"),
variable.name = "Year",
value.name = "Landings")
Landings[, ResultType:=NULL]
Landings <- Landings[GroupName == "Cod (adult)"]
Landings
merged <- merge(Quota, Landings)
merged <- merge(merged, Choke)
merged
Choke
Choke <- fread("C:/Users/Mark/Dropbox/GAP2_MSE Plugin2/North Sea MultiAnnual Plan/ResultsType1-4_220117/Results/ChokeGroup/ChokeGroup_Demersal trawl + dem seine_FleetNo1.csv",
header = T)
Choke
Choke[1,1:240]
Choke[1,1:12]
Choke[1,.(1:12)]
Choke <- melt(Choke,
id.vars = c("FleetName", "ModelID", "StrategyName", "ResultType"),
variable.name = "Year",
value.name = "Choke")
Choke
source('~/.active-rstudio-document')
Choke
Choke <- fread("C:/Users/Mark/Dropbox/GAP2_MSE Plugin2/North Sea MultiAnnual Plan/ResultsType1-4_220117/Results/ChokeGroup/ChokeGroup_Demersal trawl + dem seine_FleetNo1.csv",
header = T)
Choke <- melt(Choke,
id.vars = c("FleetName", "ModelID", "StrategyName", "ResultType"),
variable.name = "Month",
value.name = "Choke")
Choke[, ResultType:=NULL]
Choke <- Choke[StrategyName == "9 NSMAP 2020_TargetF_Weakest stock"]
Choke
Choke[ModelID = 1]
Choke[ModelID = "1"]
Choke[ModelID == 1]
Choke[1:12, ModelID == 1]
Choke[1:12]
Choke[ModelID == 1][1:12]
Choke[ModelID == 1][13:14]
Choke[ModelID == 1][13:24]
Choke[ModelID == 1, Choke][1:12]
Choke[ModelID == 1, Choke]
Choke[ModelID == 1, Choke][1:12]
mode(Choke[ModelID == 1, Choke][1:12])
Mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
mode(Choke[ModelID == 1, Choke][1:12])
Choke[ModelID == 1, Choke][1:12]
class(Choke[ModelID == 1, Choke][1:12])
Mode(Choke[ModelID == 1, Choke][1:12])
floor(0.5)
floor(1.5)
floor(1.9)
Choke <- fread("C:/Users/Mark/Dropbox/GAP2_MSE Plugin2/North Sea MultiAnnual Plan/ResultsType1-4_220117/Results/ChokeGroup/ChokeGroup_Demersal trawl + dem seine_FleetNo1.csv",
header = T)
Choke <- melt(Choke,
id.vars = c("FleetName", "ModelID", "StrategyName", "ResultType"),
variable.name = "Month",
value.name = "Choke")
Choke[, ResultType:=NULL]
Choke <- Choke[StrategyName == "9 NSMAP 2020_TargetF_Weakest stock"]
Choke[, Year := 1 + floor(Month/12)]
Choke[, ModeChoke := Mode(Choke), by = Year]
Choke
Choke[, Year := (1 + floor(Month/12))]
str(Choke)
Choke <- fread("C:/Users/Mark/Dropbox/GAP2_MSE Plugin2/North Sea MultiAnnual Plan/ResultsType1-4_220117/Results/ChokeGroup/ChokeGroup_Demersal trawl + dem seine_FleetNo1.csv",
header = T)
Choke <- melt(Choke,
id.vars = c("FleetName", "ModelID", "StrategyName", "ResultType"),
variable.name = "Month",
value.name = "Choke")
Choke[, Choke := as.numeric(Choke)]
Choke[, ResultType:=NULL]
Choke <- Choke[StrategyName == "9 NSMAP 2020_TargetF_Weakest stock"]
Choke[, Year := (1 + floor(Month/12))]
Choke[, ModeChoke := Mode(Choke), by = Year]
Choke
str(Choke)
Choke[, Month := as.numeric(Month)]
Choke[, ResultType:=NULL]
Choke <- fread("C:/Users/Mark/Dropbox/GAP2_MSE Plugin2/North Sea MultiAnnual Plan/ResultsType1-4_220117/Results/ChokeGroup/ChokeGroup_Demersal trawl + dem seine_FleetNo1.csv",
header = T)
Choke <- melt(Choke,
id.vars = c("FleetName", "ModelID", "StrategyName", "ResultType"),
variable.name = "Month",
value.name = "Choke")
Choke[, Month := as.numeric(Month)]
str(Choke)
Choke[, ResultType:=NULL]
Choke <- Choke[StrategyName == "9 NSMAP 2020_TargetF_Weakest stock"]
Choke[, Year := (1 + floor(Month/12))]
Choke[, ModeChoke := Mode(Choke), by = Year]
Choke
Choke[, ModeChoke := Mode(Choke), by = .(ModelID, Year)]
Choke <- fread("C:/Users/Mark/Dropbox/GAP2_MSE Plugin2/North Sea MultiAnnual Plan/ResultsType1-4_220117/Results/ChokeGroup/ChokeGroup_Demersal trawl + dem seine_FleetNo1.csv",
header = T)
Choke <- melt(Choke,
id.vars = c("FleetName", "ModelID", "StrategyName", "ResultType"),
variable.name = "Month",
value.name = "Choke")
Choke[, Month := as.numeric(Month)]
Choke[, ResultType:=NULL]
Choke <- Choke[StrategyName == "9 NSMAP 2020_TargetF_Weakest stock"]
Choke[, Year := (1 + floor(Month/12))]
Choke[, ModeChoke := Mode(Choke), by = .(ModelID, Year)]
Choke
merged <- merge(Quota, Landings)
merged <- merge(merged, Choke)
merged
Choke
Choke <- fread("C:/Users/Mark/Dropbox/GAP2_MSE Plugin2/North Sea MultiAnnual Plan/ResultsType1-4_220117/Results/ChokeGroup/ChokeGroup_Demersal trawl + dem seine_FleetNo1.csv",
header = T)
Choke <- melt(Choke,
id.vars = c("FleetName", "ModelID", "StrategyName", "ResultType"),
variable.name = "Month",
value.name = "Choke")
Choke[, Month := as.numeric(Month)]
Choke[, ResultType:=NULL]
Choke <- Choke[StrategyName == "9 NSMAP 2020_TargetF_Weakest stock"]
Choke[, Year := (1 + floor(Month/12))]
Choke[, ModeChoke := Mode(Choke), by = .(ModelID, Year)]
Choke[, c("Month", "Choke") := NULL]
Choke = unique(Choke)
Choke
Landings
CHoke[Year==1]
Choke[Year==1]
Choke[Year==1 & ModelID == 1]
Choke <- fread("C:/Users/Mark/Dropbox/GAP2_MSE Plugin2/North Sea MultiAnnual Plan/ResultsType1-4_220117/Results/ChokeGroup/ChokeGroup_Demersal trawl + dem seine_FleetNo1.csv",
header = T)
Choke <- melt(Choke,
id.vars = c("FleetName", "ModelID", "StrategyName", "ResultType"),
variable.name = "Month",
value.name = "Choke")
Choke[, Month := as.numeric(Month)]
Choke[, ResultType:=NULL]
Choke <- Choke[StrategyName == "9 NSMAP 2020_TargetF_Weakest stock"]
Choke[, Year := (1 + floor((Month - 1) / 12))]
Choke[, ModeChoke := Mode(Choke), by = .(ModelID, Year)]
Choke[, c("Month", "Choke") := NULL]
Choke = unique(Choke)
Choke
Landings
merged <- merge(Quota, Landings)
merged <- merge(merged, Choke)
merged
Choke
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
#checking where things are going wrong with underutilization of cod quota
#functions
Mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
#load quota, landings and choke groups for:
iGroup <- "Cod (adult)"
iFleet <- "Fleet1"
iStrategy <- "9 NSMAP 2020_TargetF_Weakest stock"
Quota <- fread("C:/Users/Mark/Dropbox/GAP2_MSE Plugin2/North Sea MultiAnnual Plan/ResultsType1-4_220117/Results/HCRQuota_Targ/HCR_Quota_Targ_Cod (adult)_GroupNo14_FleetNo1.csv",
header = T)
Quota <- melt(Quota,
id.vars = c("GroupName", "FleetName", "ModelID", "StrategyName", "ResultType"),
variable.name = "Year",
value.name = "Quota")
Quota <-  Quota[GroupName == "Cod (adult)" & StrategyName == "9 NSMAP 2020_TargetF_Weakest stock"]
Quota[, c("ResultType", "GroupName") := NULL]
Landings <- fread("C:/Users/Mark/Dropbox/GAP2_MSE Plugin2/North Sea MultiAnnual Plan/ResultsType1-4_220117/Results/LandingsTrajectories/LandingsYearly_Cod (adult)_GroupNo14_FleetNo1.csv",
header = T)
Landings <- melt(Landings,
id.vars = c("GroupName", "FleetName", "ModelID", "StrategyName", "ResultType"),
variable.name = "Year",
value.name = "Landings")
Landings <- Landings[GroupName == "Cod (adult)" & StrategyName == "9 NSMAP 2020_TargetF_Weakest stock"]
Landings[, c("ResultType", "GroupName") := NULL]
Choke <- fread("C:/Users/Mark/Dropbox/GAP2_MSE Plugin2/North Sea MultiAnnual Plan/ResultsType1-4_220117/Results/ChokeGroup/ChokeGroup_Demersal trawl + dem seine_FleetNo1.csv",
header = T)
Choke <- melt(Choke,
id.vars = c("FleetName", "ModelID", "StrategyName", "ResultType"),
variable.name = "Month",
value.name = "Choke")
Choke[, Month := as.numeric(Month)]
Choke[, ResultType:=NULL]
Choke <- Choke[StrategyName == "9 NSMAP 2020_TargetF_Weakest stock"]
Choke[, Year := (1 + floor((Month - 1) / 12))]
Choke[, ModeChoke := Mode(Choke), by = .(ModelID, Year)]
Choke[, c("Month", "Choke") := NULL]
Choke = unique(Choke)
Quota
Landings
Choke
merged <- merge(Quota, Landings)
merged <- merge(merged, Choke)
merged
Choke
str(merged)
str(Choke)
source('~/.active-rstudio-document')
merged
library(ggplot2)
qplot(Quota, Landings, merged, color = ModeChoke)
str(merged)
merged[, ModeChoke := as.factor(ModeChoke)]
merged
qplot(Quota, Landings, merged, color = ModeChoke)
str(merged)
qplot(x = Quota, y = Landings, data = merged, colour = ModeChoke)
qplot(x = Quota, y = Landings, data = merged, color = ModeChoke)
qplot(x = Quota, y = Landings, data = merged, color = ModeChoke, alpha=0.5)
qplot(x = Quota, y = Landings, data = merged, color = ModeChoke, alpha=0.1)
qplot(x = Quota, y = Landings, data = merged, color = ModeChoke, alpha=0.01)
qplot(x = Quota, y = Landings, data = merged, color = ModeChoke, alpha = I(0.01))
qplot(x = Quota, y = Landings, data = merged, color = ModeChoke, alpha = I(0.1))
Choke[ModeChoke != "Cod (adult)", ModeChoke := "Other"]
Choke
source('~/.active-rstudio-document')
qplot(x = Quota, y = Landings, data = merged, color = ModeChoke, alpha = I(0.1))
qplot(x = Quota, y = Landings, data = merged[ModeChoke == "Other"], color = ModeChoke, alpha = I(0.1))
qplot(x = Quota, y = Landings, data = merged, color = ModeChoke, alpha = I(0.1), facets = ModeChoke~.)
qplot(x = Quota, y = Landings, data = merged, color = ModeChoke, alpha = I(0.05), facets = ModeChoke~.)
qplot(x = Quota, y = Landings, data = merged, color = ModeChoke, alpha = I(0.1), facets = ModeChoke~.)
qplot(x = Quota, y = Landings, data = merged, color = "blue", alpha = I(0.1), facets = ModeChoke~.)
qplot(x = Quota, y = Landings, data = merged, color = blue, alpha = I(0.1), facets = ModeChoke~.)
qplot(x = Quota, y = Landings, data = merged, alpha = I(0.1), facets = ModeChoke~.)
qplot(x = Quota, y = Landings, data = merged, colour = "red", alpha = I(0.1), facets = ModeChoke~.)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
print(a)
merged
print(merged)
Quota
Landings
Choke
merged <- merge(Quota, Landings)
merged
merge(merged, Choke)
merged
Choke
Landings <- fread(paste("C:/Users/Mark/Dropbox/GAP2_MSE Plugin2/North Sea MultiAnnual Plan/ResultsType1-4_220117/Results/LandingsTrajectories/LandingsYearly_Cod (adult)_GroupNo14_", iFleet, ".csv", sep=""),
header = T)
Landings
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
LETTERS
[4:6]
LETTERS[4:6]
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/Create_landings-quota_file.R')
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/Create_landings-quota_file.R')
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/Create_landings-quota_file.R')
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/Create_landings-quota_file.R')
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/Create_landings-quota_file.R')
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/Create_landings-quota_file.R')
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/Create_landings-quota_file.R')
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/Create_landings-quota_file.R')
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/Create_landings-quota_file.R')
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/Create_landings-quota_file.R')
head(dt.choke)
dt[, col.data.starts:ncol(dt)]
sum(data.only!=val.to.check)
data.only
val.to.check
data.only!=val.to.check
anyNA(data.only)
allna(data.only)
is.na(data.only)
all(is.na(data.only))
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/Create_landings-quota_file.R')
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/Create_landings-quota_file.R')
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/Create_landings-quota_file.R')
dt.landings
iGroup
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/Create_landings-quota_file.R')
if(TRUE) print("Hello"); print("Goodbye")
if(FALSE) print("Hello"); print("Goodbye")
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/Create_landings-quota_file.R')
matrix(
c(2, 4, 3, 1, 5, 7),
nrow=3,
ncol=2)
matrix(
c(2, 4, 3, 1, 5, 7),
ncol=2, nrow =2)
matrix(
c(2, 4, 3, 1, 5, 7),
ncol=2, nrow =3)
matrix(
c(2, 4, 3, 1, 5, 7),
ncol=2, nrow =3, byrow = T)
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/Create_landings-quota_file.R')
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/Create_landings-quota_file.R')
path.landings
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/Create_landings-quota_file.R')
c(str_c("FleetNO", 1:11), "AllFleets")
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/Create_landings-quota_file.R')
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/share_tools.R')
isNotAll = function(dt, col.data.starts, val.to.check)
#count how many values aren't NA and if there is at least one then return that file is valid
{
data.only = dt[, col.data.starts:ncol(dt)]
file.valid = FALSE
if(sum(data.only!=val.to.check)>0) {file.valid = TRUE}
return (file.valid)
}
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/share_tools.R')
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/Create_landings-quota_file.R')
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/Create_landings-quota_file.R')
dt.choke
dt.choke
dt.landings
dt.landings
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/Create_landings-quota_file.R')
dt
dt
dt
val.name
dt
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/Create_landings-quota_file.R')
dt.choke
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/Create_landings-quota_file.R')
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/Create_landings-quota_file.R')
melt(data = dt, id.vars = 1:ncol.before.timesteps, variable.name = "TimeStep", value.name = val.name)
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/Create_landings-quota_file.R')
merge(dt.landings, dt.quota)
dt.landings
dt.quota
dt.landings
dt.quota
merge(dt.landings, dt.quota)
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/Create_landings-quota_file.R')
dt.choke
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/Create_landings-quota_file.R')
ncol.before.timesteps
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/Create_landings-quota_file.R')
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/Create_landings-quota_file.R')
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/Create_landings-quota_file.R')
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/Create_landings-quota_file.R')
dt.choke
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/Create_landings-quota_file.R')
ncol.before.timesteps
dt
merge(dt, dt.choke, by = c("FleetName", "ModelID", "StrategyName"))
?merge
dt.choke
merge(dt, dt.choke, by = c("FleetName", "ModelID", "StrategyName", "TimeStep"))
dt.choke
Mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
Mode(dt.choke[,choke_group])
dt.choke[, .N, by = choke_group]
dt.choke[choke_group != NA, .N, by = choke_group]
dt.choke[!is.na(choke_group), .N, by = choke_group]
round(13/12)
round(11/12)
floor(11/12)
floor(12/12)
floor(13/12)
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/Create_landings-quota_file.R')
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/Create_landings-quota_file.R')
dt.choke
dt.choke[, TimeStep = (1 + floor(TimeStep/12))]
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/Create_landings-quota_file.R')
dt.choke
dt.choke[, TimeStep = (1 + floor(TimeStep/12))]
dt.choke[, TimeStep]
dt.choke[, TimeStep]/12
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/Create_landings-quota_file.R')
dt.choke
glimpse(dt.choke)
dt.choke[, TimeStep]
dt.choke[, TimeStep]/12
1 + floor(dt.choke[, TimeStep]/12)
unique(1 + floor(dt.choke[, TimeStep]/12))
unique(1 + floor((dt.choke[, TimeStep]-1)/12))
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/Create_landings-quota_file.R')
dt.choke
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/Create_landings-quota_file.R')
dt.choke
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/Create_landings-quota_file.R')
dt.choke
unique(dt.choke$choke)
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/Create_landings-quota_file.R')
dt.choke
dt.choke[ModelID == 1 & StrategyName == "1 CFP_2015 TargetF_Weakest stock"]
unique(dt.choke[ModelID == 1 & StrategyName == "1 CFP_2015 TargetF_Weakest stock"])
unique(dt.choke)
dt.choke
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/Create_landings-quota_file.R')
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/Create_landings-quota_file.R')
glimpse(dt.choke)
glimpse(dt.landings)
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/Create_landings-quota_file.R')
dt
unique(dt$StrategyName)
dt[, landings.minus.quota.modified := landings.minus.quota * (GroupName!=choke)]
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/Create_landings-quota_file.R')
write.path
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/Create_landings-quota_file.R')
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/Create_landings-quota_file.R')
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/Create_landings-quota_file.R')
print
apply
?print
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/Create_landings-quota_file.R')
dt.choke
summary(dt.choke)
dt
setwd("C:/Users/Mark/Dropbox/Personal/Learning/R Creating Packages/cats")
install.packages(cats)
install.packages("cats")
setwd("..")
install.packages("cats")
install("cats")
library("devtools")
install("cats")
?cat_function
library(cats)
?cat_function
cat_function
getwd()
dir()
set("cats")
setwd("cats")
document()
setwd("..")
install("cats")
?cat_function
document()
setwd("..")
document()
dir
dir()
setwd("R creating Packages/cats")
dir()
document()
setwd("..")
install("cats")
?cat_function
?cat_function
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/Create_all_tables.R')
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/Create_all_tables.R')
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/Create_all_tables.R')
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/plotting 15July_2016_ChokeHighestValue_byFleet - Refactor.R')
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/plotting 15July_2016_ChokeHighestValue_byFleet - Refactor.R')
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/plotting 15July_2016_ChokeHighestValue_byFleet - Refactor.R')
rm(list=ls())
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/initialisation_baltic.R')
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/plotting 15July_2016_ChokeHighestValue_byFleet - Refactor.R')
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/plotting 15July_2016_ChokeHighestValue_byFleet - Refactor.R')
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/plotting 15July_2016_ChokeHighestValue_byFleet - Refactor.R')
?arima.sim
arima.sim(n = 10, list(order = c(0,0,0)))
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
View(appendVariableToDataTable)
