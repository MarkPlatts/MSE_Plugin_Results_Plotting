source('C:/Users/Mark/Desktop/MSE_Plugin_Results_Plotting/PlotScript_AverageQuotaAcrossModelsAndRegTypes.R')
df_Average_Quota
Area_km2
source('C:/Users/Mark/Desktop/MSE_Plugin_Results_Plotting/PlotScript_AverageQuotaAcrossModelsAndRegTypes.R')
source('C:/Users/Mark/Desktop/MSE_Plugin_Results_Plotting/PlotScript_AverageQuotaAcrossModelsAndRegTypes.R')
LoadFile_ContainsListStrings(Dir.Path = paste(ResultsPath,"/HCRQuota_Targ/",sep=''), StringsInFileName = c(Group, Fleet))
FileData
isAll(FileData, col.data.starts=6, val.to.check=-9999)
Strategies_OfRegType
UniqueStrategies
RegulationType
head(FileData)
source('C:/Users/Mark/Desktop/MSE_Plugin_Results_Plotting/Run_DistributionPlots.R')
source('C:/Users/Mark/Desktop/MSE_Plugin_Results_Plotting/Plot_Distribution_Last5YearsBiomassMean.R')
params$plot.path
params = initialise_params(batch = "0")
output_folder = paste(params$plot.path,"OUTPUT_END_DISTRIBUTIONS/", sep="")
biomrefs_csv_inc_path = paste(params$plot.path,"Biom_refs.csv", sep="")
biomrefs_csv_inc_path
biomrefs_csv_inc_path = paste(params$plot.path,"Biom_refs.csv", sep="")
isNotGroupToPlot = function(biomass.file.name){
startloc = str_locate(biomass.file.name, "GroupNo")[1]
endloc = str_locate(biomass.file.name, ".csv")[1] - 1
group.groupnoxx.format = str_sub(biomass.file.name, startloc, endloc)
if(!group.groupnoxx.format %in% params$Groups2Plot) return (TRUE)
#else
return(FALSE)
}
unique.groups = LoadUniqueGroups(params$RootPath)
biom_refs<-read.csv(biomrefs_csv_inc_path,sep=",", header=TRUE)
biom_refs
summary.dt = data.table()
summary.dt = data.table()
SumBlim=list()  #The number of results that are above the Blim
percBlim=list() #The percentage of the results above Blim
SumBpa=list()   #The number of results that are above Bpa
percBpa=list()  #The percentage of the results above Bpa
df.perc.Blim = data.table()
df.perc.Bpa = data.table()
nUniqueStrategies = unique(params$strats)
for(igroup in unique.groups){
if(igroup != "Cod (adult)") next
#get the file in HCRQuota_Targ folder that are for "AllFleets"
biomass.file.name = GetFileName_ContainsStrings(FolderPath = paste(params$RootPath, "Biomass/", sep=""),
Strings = c(igroup), WithPath=T)
#check whether group is listed to be plotted
if(isNotGroupToPlot(biomass.file.name)) next
#Load the file
biomass = fread(biomass.file.name, skip=7, header=T)
#load the files and sum
biomass = calcLast5Year(biomass, "biomass.last5yearmean", 4, function.type = 2)
#filter for the strategies selected in initialisation.R
biomass = biomass[biomass$StrategyName %in% params$strats, ]
#Modify the values so that they are for the entire region
biomass$biomass.last5yearmean = biomass$biomass.last5yearmean*params$Area/1000
#add the group name to a column because I'm going to facet plot using this
biomass = appendVariableToDataTable(dt = biomass, variable = igroup, variablename = "GroupName", beg=TRUE, end=FALSE)
max.axis.x = max(biomass$biomass.last5yearmean)
#Calc the percent below Bpa & Blim
bpa = biom_refs[biom_refs$Group==igroup,]$Bpa
blim = biom_refs[biom_refs$Group==igroup,]$Blim
biomass$below.bpa = biomass$biomass.last5yearmean<bpa
biomass$above.bpa = biomass$biomass.last5yearmean>=bpa
biomass$below.blim = biomass$biomass.last5yearmean<blim
biomass$above.blim = biomass$biomass.last5yearmean>=blim
# biomass.percent.below.refpoints = biomass[,list(bpa = sum(below.bpa)/length(below.bpa),
#                                                 blim = sum(below.blim)/length(below.blim)), by="StrategyName"]
#
#calculate the 5 number summary for each strategy
browser()
biomass.summary.by.strategy = biomass[,list(Min = min(biomass.last5yearmean),
LQ = quantile(biomass.last5yearmean, .25, na.rm=TRUE),
Median = median(biomass.last5yearmean),
UQ = quantile(biomass.last5yearmean, .75, na.rm=TRUE),
Max = max(biomass.last5yearmean),
Mean = mean(biomass.last5yearmean),
Percent.Below.Bpa = sum(below.bpa)/length(above.bpa),
Percent.Below.Blim = sum(below.blim)/length(below.blim)), by="StrategyName"]
biomass.summary.by.strategy = appendVariableToDataTable(biomass.summary.by.strategy, igroup, "GroupName", beg=TRUE, end=FALSE)
summary.dt = rbind(summary.dt, biomass.summary.by.strategy)
#get 10th of plot width to add this to where the vertical lines are
distance.from.vlines = max.axis.x/100
#for each group with a blim or bpa create a table with all the labels in it for plotting vertical lines
#I believe we need to have a unique row for each strategy because that is how ggplot knows how to plot for each strategy plot with facet
#Extract reference points
nStrategies = length(params$strats)
if(igroup %in% biom_refs[,"Group"]){
bpa = read_biom_refs(biom_refs, igroup, "bpa")     #Needs to be specified in the file as kt
blim = read_biom_refs(biom_refs, igroup, "blim")   #Needs to be specified in the file as kt
max.axis.x = max(max.axis.x, bpa, blim)
ref.points = data.table(StrategyName = params$strats,
bpa = rep(bpa, nStrategies), bpa_lab = rep("Bpa", nStrategies), bpa_lab_pos = rep(bpa - distance.from.vlines, nStrategies),
blim = rep(blim, nStrategies), blim_lab = rep("Blim", nStrategies), blim_lab_pos = rep(blim - distance.from.vlines, nStrategies))
}
#browser()
# bmedian.dt = data.table(StrategyName = params$strats,
#                         bmedian = biomass.summary.by.strategy$Median,
#                         bmedian_lab = rep("Median", nStrategies),
#                         bmedian_lab_pos = biomass.summary.by.strategy$Median - distance.from.vlines)
bmedian.dt = biomass.summary.by.strategy[, bmedian_lab:= "Median"][,bmedian_lab_pos:= biomass.summary.by.strategy$Median - distance.from.vlines]
number_bins = 40
#plot them
B_SPECIES = ggplot(biomass,aes(x=biomass.last5yearmean)) + labs(title =  paste("Mean Biomass Across the Last 5 Years for", igroup)) +
xlab("Biomass (t)") + ylab("Density")
B_SPECIES = B_SPECIES + geom_histogram(binwidth = (max.axis.x)/number_bins, aes(y=..density..), colour="darkgreen", fill="lightgreen")
B_SPECIES = B_SPECIES + facet_wrap(~StrategyName, ncol=1)
#if the group has a blim and bpa then extract from table and plot
#species_in_biomrefsfile<-levels(blim.bpa[,"Group"])
max.y = max(ggplot_build(B_SPECIES)$data[[1]]$density)
if(igroup %in% biom_refs[,"Group"]){
B_SPECIES = B_SPECIES + geom_text(data = ref.points, aes(x = blim_lab_pos, y = max.y*9/10, label = blim_lab), size = 2, angle = 90)
B_SPECIES = B_SPECIES + geom_text(data = ref.points, aes(x = bpa_lab_pos, y = max.y*9/10, label = bpa_lab), size = 2, angle=90)
B_SPECIES = B_SPECIES + geom_vline(data =ref.points, aes(xintercept=blim),linetype="dotdash", size=0.15)
B_SPECIES = B_SPECIES + geom_vline(data =ref.points, aes(xintercept=bpa),linetype="longdash", size=0.15)
}
B_SPECIES = B_SPECIES + geom_text(data = bmedian.dt,
aes(x = bmedian_lab_pos, y = max.y*9/10, label = bmedian_lab),
size = 2,
angle=90)
B_SPECIES = B_SPECIES + geom_vline(data =bmedian.dt,
aes(xintercept=Median),
linetype="longdash", size=0.15)
ggsave(B_SPECIES, file=paste(output_folder, "Biomass5YearMean_",igroup,".png", sep=""), width=6, height=length(params$strats)*2, limitsize = FALSE)
}
source('C:/Users/Mark/Desktop/MSE_Plugin_Results_Plotting/Plot_Distribution_Last5YearsBiomassMean.R')
source('C:/Users/Mark/Desktop/MSE_Plugin_Results_Plotting/Plot_Distribution_Last5YearsBiomassMean.R')
source('C:/Users/Mark/Desktop/MSE_Plugin_Results_Plotting/Plot_Distribution_Last5YearsBiomassMean.R')
biom_refs
biomrefs_csv_inc_path
source('C:/Users/Mark/Desktop/MSE_Plugin_Results_Plotting/Create_all_tables.R')
source('C:/Users/Mark/Desktop/MSE_Plugin_Results_Plotting/Create_all_tables.R')
source('C:/Users/Mark/Desktop/MSE_Plugin_Results_Plotting/Create_all_tables.R')
getwd()
source('C:/Users/Mark/Desktop/MSE_Plugin_Results_Plotting/Create_all_tables.R')
source('C:/Users/Mark/Desktop/MSE_Plugin_Results_Plotting/Create_all_tables.R')
source('C:/Users/Mark/Desktop/MSE_Plugin_Results_Plotting/Create_all_tables.R')
source('C:/Users/Mark/Desktop/MSE_Plugin_Results_Plotting/Create_all_tables.R')
source('C:/Users/Mark/Desktop/MSE_Plugin_Results_Plotting/Calc_Catch_Start_End_Ratio.R')
source('C:/Users/Mark/Desktop/MSE_Plugin_Results_Plotting/Create_all_tables.R')
catches
source('C:/Users/Mark/Desktop/MSE_Plugin_Results_Plotting/Create_all_tables.R')
catches_last5year
dt.all
source('C:/Users/Mark/Desktop/MSE_Plugin_Results_Plotting/Create_all_tables.R')
source('C:/Users/Mark/Desktop/MSE_Plugin_Results_Plotting/Create_all_tables.R')
source('C:/Users/Mark/Desktop/MSE_Plugin_Results_Plotting/Create_all_tables.R')
catch.ratio.summary.by.strategy
root.plot
source('C:/Users/Mark/Desktop/MSE_Plugin_Results_Plotting/Create_all_tables.R')
source('C:/Users/Mark/Desktop/MSE_Plugin_Results_Plotting/Create_all_tables.R')
root.plot
source('C:/Users/Mark/Desktop/MSE_Plugin_Results_Plotting/Create_all_tables.R')
root.plot
source('C:/Users/Mark/Desktop/MSE_Plugin_Results_Plotting/Create_all_tables.R')
root.plot
source('C:/Users/Mark/Desktop/MSE_Plugin_Results_Plotting/Create_all_tables.R')
root.plot
source('C:/Users/Mark/Desktop/MSE_Plugin_Results_Plotting/Create_all_tables.R')
root.plot
# INITIALISATION START ===============================================================================================
#start with a clean sheet
rm(list = ls())
#load libraries & sources
setwd("C:/Users/Mark/Desktop/MSE_Plugin_Results_Plotting")
source("share_tools.R")
source("initialisation_baltic.R")
params = initialise_params(0)
#root results path
root.plot <-     params$plot.path
root.results =  params$RootPath
hcr.folders = params$hcr.folders
groups.for.f.or.biomass = "f"
setwd("C:/Users/Mark/Desktop/MSE_Plugin_Results_Plotting")
# INITIALISATION END ===============================================================================================
print("Calc_Catch_Start_End_Ratio.R")
source("Calc_Catch_Start_End_Ratio.R")
root.plot
initialise_params(0)
params$plot.path
source('C:/Users/Mark/Desktop/MSE_Plugin_Results_Plotting/Create_all_tables.R')
params$plot.path
batch
source('C:/Users/Mark/Desktop/MSE_Plugin_Results_Plotting/initialisation_baltic.R')
source('C:/Users/Mark/Desktop/MSE_Plugin_Results_Plotting/Create_all_tables.R')
params$plot.path
source('C:/Users/Mark/Desktop/MSE_Plugin_Results_Plotting/Create_all_tables.R')
source('C:/Users/Mark/Desktop/MSE_Plugin_Results_Plotting/Create_all_tables.R')
root.plot
source('C:/Users/Mark/Desktop/MSE_Plugin_Results_Plotting/Create_all_tables.R')
source('C:/Users/Mark/Desktop/MSE_Plugin_Results_Plotting/Create_all_tables.R')
source('C:/Users/Mark/Desktop/MSE_Plugin_Results_Plotting/Create_all_tables.R')
getwd()
source('C:/Users/Mark/Desktop/MSE_Plugin_Results_Plotting/Create_all_tables.R')
source('C:/Users/Mark/Desktop/MSE_Plugin_Results_Plotting/Create_all_tables.R')
source('C:/Users/Mark/Desktop/MSE_Plugin_Results_Plotting/Create_all_tables.R')
source('C:/Users/Mark/Desktop/MSE_Plugin_Results_Plotting/Create_all_tables.R')
source('C:/Users/Mark/Desktop/MSE_Plugin_Results_Plotting/Calc_Percent_Below_Conservation_Limits.R')
source('C:/Users/Mark/Desktop/MSE_Plugin_Results_Plotting/Create_all_tables.R')
source('C:/Users/Mark/Desktop/MSE_Plugin_Results_Plotting/Create_all_tables.R')
unique.groups
strategies.table
source('C:/Users/Mark/Desktop/MSE_Plugin_Results_Plotting/Calc_Percent_Below_Conservation_Limits.R')
source('C:/Users/Mark/Desktop/MSE_Plugin_Results_Plotting/Create_all_tables.R')
strategies.table
source('C:/Users/Mark/Desktop/MSE_Plugin_Results_Plotting/Create_all_tables.R')
source('C:/Users/Mark/Desktop/MSE_Plugin_Results_Plotting/Create_all_tables.R')
params$plot.path
source('C:/Users/Mark/Desktop/MSE_Plugin_Results_Plotting/Create_all_tables.R')
source('C:/Users/Mark/Desktop/MSE_Plugin_Results_Plotting/Create_all_tables.R')
source('C:/Users/Mark/Desktop/MSE_Plugin_Results_Plotting/landings_table.R')
source('C:/Users/Mark/Desktop/MSE_Plugin_Results_Plotting/Create_all_tables.R')
source('C:/Users/Mark/Desktop/MSE_Plugin_Results_Plotting/Calc_Mean5YearCatch_FiveNum_Sum.R')
source('C:/Users/Mark/Desktop/MSE_Plugin_Results_Plotting/Create_all_tables.R')
root.results
iFile.catch
catches
catches_last5year
dt
catche.ratio
catch.ratio.summary.by.strategy
CatchType
source('C:/Users/Mark/Desktop/MSE_Plugin_Results_Plotting/Create_all_tables.R')
source('C:/Users/Mark/Desktop/MSE_Plugin_Results_Plotting/Create_all_tables.R')
source('C:/Users/Mark/Desktop/MSE_Plugin_Results_Plotting/Create_all_tables.R')
dt.all
dt.all[,list(Min = min(catch.last5yearsum),
LQ = quantile(catch.last5yearsum, .25, na.rm=TRUE),
Median = median(catch.last5yearsum),
Mean = mean(catch.last5yearsum),
UQ = quantile(catch.last5yearsum, .75, na.rm=TRUE),
Max = max(catch.last5yearsum)), by=c("StrategyName", "GroupName", "FleetName")]
source('C:/Users/Mark/Desktop/MSE_Plugin_Results_Plotting/Calc_Mean5YearCatch_FiveNum_Sum.R')
catch.ratio.summary.by.strategy
summary(catch.ratio.summary.by.strategy)
CatchType
paste(root.plot, "Tables/",CatchType,"_5NumSum.csv", sep="")
dt.all
source('C:/Users/Mark/Desktop/MSE_Plugin_Results_Plotting/Calc_Mean5YearCatch_FiveNum_Sum.R')
dt.all
dt.all[,c(GroupName,catch.last5yearsum)]
dt.all[,c("GroupName","catch.last5yearsum")]
dt.all[,.("GroupName","catch.last5yearsum")]
dt.all[,.("GroupName","catch.last5yearsum"), with=FALSE]
dt.all[,.("GroupName","catch.last5yearsum")]
dt.all[,c("GroupName","catch.last5yearsum")]
dt.all[,c("GroupName","catch.last5yearsum"), with=FALSE]
dt.all[,c("GroupName","catch.last5yearsum")]
dt.all[,GroupName:catch.last5yearsum, with=FALSE]
dt.all[,GroupName:catch.last5yearsum]
dt.all[,-(GroupName:catch.last5yearsum)]
dt.all
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/Calc_Mean5YearBiomass_FiveNum_Sum.R')
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/Calc_Mean5YearBiomass_FiveNum_Sum.R')
biom_refs[biom_refs$Group==igroup,]$Bpa
biomrefs
params$plot.path
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/initialisation.R')
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/Create_all_tables.R')
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/Calc_Mean5YearBiomass_FiveNum_Sum.R')
initialise_params = function(batch){
# batch = 0 means plot all strategies in the folder "Plots"
params = list()
params$plot_each_timestep = FALSE;
params$PLOT_CONFIDENCE_INTERVALS = F;
params$Plot_yearly_files = TRUE
switch (batch,
# "0" = {params$plot.path = "C:/Users/Mark/Dropbox/GAP2_MSE Plugin2/North Sea MultiAnnual Plan/ResultsType1-4_220117/Plots/"},
"0" = {params$plot.path = "C:/Users/Mark/Desktop/Plots for report/"}
# "1" = {params$plot.path = "C:/Users/Mark/Dropbox/GAP2_MSE Plugin2/North Sea MultiAnnual Plan/ResultsType1-4_220117/Plots_strats_1-20/"},
# "2" = {params$plot.path = "C:/Users/Mark/Dropbox/GAP2_MSE Plugin2/North Sea MultiAnnual Plan/ResultsType1-4_220117/Plots_strats_21-40/"},
# "3" = {params$plot.path = "C:/Users/Mark/Dropbox/GAP2_MSE Plugin2/North Sea MultiAnnual Plan/ResultsType1-4_220117/Plots_strats_41-end/"}
)
params$RootPath =  "C:/Users/Mark/Dropbox/GAP2_MSE Plugin2/North Sea MultiAnnual Plan/ResultsType1-4_220117/Results/"
params$hcr.folders = c("C:/Users/Mark/Dropbox/GAP2_MSE Plugin2/NorthSea Model/2015 FINAL Key Run/DATA/HCRs/Type1_BmsytoZero",
"C:/Users/Mark/Dropbox/GAP2_MSE Plugin2/NorthSea Model/2015 FINAL Key Run/DATA/HCRs/Type2_BmsyBlimClifftoZero",
"C:/Users/Mark/Dropbox/GAP2_MSE Plugin2/NorthSea Model/2015 FINAL Key Run/DATA/HCRs/Type3_BmsytoZeroatBlim",
"C:/Users/Mark/Dropbox/GAP2_MSE Plugin2/NorthSea Model/2015 FINAL Key Run/DATA/HCRs/Type4_BmsyBlimClifftoFmin")
params$Base_NYears = 23
params$Projected_NYears = 20
params$StartRun_Year = 1991
params$nYrs = params$Base_NYears + params$Projected_NYears
params$StartProjection_Year = params$StartRun_Year + params$nYrs - params$Projected_NYears
params$EndRun_Year = params$StartRun_Year + params$nYrs
params$Area = 570000
#Select groups and fleets to plot
params$Groups2Plot = paste("GroupNo", 1:66, sep="")
# params$Groups2Plot = c("GroupNo14", "GroupNo16")
# params$Groups2Plot = c("GroupNo16","GroupNo14","GroupNo18","GroupNo20","GroupNo21","GroupNo23","GroupNo29","GroupNo30",
#                        "GroupNo31","GroupNo33","GroupNo34","GroupNo38","GroupNo42","GroupNo22","GroupNo26","GroupNo32",
#                        "GroupNo35","GroupNo39","GroupNo41","GroupNo55")
#params$Fleets2Plot = c("AllFleets", "FleetNo1")
params$Fleets2Plot = c("AllFleets", "FleetNo1", "FleetNo2", "FleetNo3", "FleetNo4", "FleetNo5", "FleetNo6", "FleetNo7",
"FleetNo8", "FleetNo9", "FleetNo10", "FleetNo11")
#setwd(params$RootPath)
### Load results files to get unique strats (comment/uncomment to select method of choosing strategies to plot)
#plot all strats
# results<-read.table("Results.csv",sep=',',skip=8,col.names=c("Model","Strategy","GroupID","GroupName","Variable","Value"), fill=T)
# results<-results[results$Strategy!="Z",]#odd one in _SR_final
# params$strats <- as.character(unique(results$Strategy))  # 10/15 strategies
params$strats = LoadUniqueStrategies(params$RootPath)
params$strats <- params$strats[params$strats != "NONE"]
#params$strats <- params$strats[41:length(params$strats)]
#params$strats <- params$strats[21:40]
switch (batch,
"1" = {params$strats <- params$strats[1:20]},
"2" = {params$strats <- params$strats[21:40]},
"3" = {params$strats <- params$strats[41:length(params$strats)]})
#plot strats in this vector
params$strats <- c("14 NSMAP 2020_HighF_Highest value", "11 NSMAP 2020_HighF_Weakest stock")
#plot strats chosen interactively
# params$strats <- create_list_strategies(params$RootPath)
params$reg.types = c("Weakest stock", "Highest value", "Selective")
params$lineweight = 0.3
params$legend_x_inset2 = -0.45
params$COL = rep(1:8,10)[1:length(params$strat)]
params$LTY<- c(rep(1,8),rep(2,8),rep(3,8),rep(4,8),rep(5,8),rep(6,8),rep(7,8),rep(8,8))[1:length(params$strats)]
params$WRITE<-F
params$SAVE<-T
params$LEGEND<-T
params$MORT_HCRF_Cons <- F
params$MORT_HCRF_Targ<- F
params$QUOTA_HCRF_Cons<- F
params$QUOTA_HCRF_Targ<- F
params$MORT_REAL_LandF <- F
params$MORT_REAL_DiscF <- F
params$MORT_REAL_F <- F
params$CATCH <-F
params$LANDING <- F
params$DISCARD <- F
params$EFFORT <-F
params$VALUE <- F
params$BIOMASS <-F
params$HIGHEST_VALUE <- F
params$CHOKE_GROUPS <- F
params$AverageQuota_EachFleet <- F
#browser()
return(params)
}
params$plot.path
initialise_params("0")
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/Calc_Mean5YearBiomass_FiveNum_Sum.R')
params$plot.path
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/Calc_Mean5YearBiomass_FiveNum_Sum.R')
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/Calc_Mean5YearBiomass_FiveNum_Sum.R')
params$plot.path
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/initialisation.R')
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/Calc_Mean5YearBiomass_FiveNum_Sum.R')
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/initialisation.R')
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/Calc_Mean5YearBiomass_FiveNum_Sum.R')
biom_refs[biom_refs$Group==igroup,]$Bpa
biom_refs
igroup
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/Calc_Mean5YearBiomass_FiveNum_Sum.R')
igroup
biom_refs[biom_refs$Group==igroup,]$Bpa
biomass$biomass.last5yearmean
biomass$biomass.last5yearmean<bpa
bpa
biomass$biomass.last5yearmean<bpa
sum(biomass$biomass.last5yearmean<bpa)
sum(biomass$biomass.last5yearmean>=bpa)
sum(biomass$biomass.last5yearmean<blim)
biomass.file
for(iplot in c(15)){
print(paste("Currently plotting type", iplot))
plot_type(iplot)
}
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/plotting 15July_2016_ChokeHighestValue_byFleet - Refactor.R')
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/plotting 15July_2016_ChokeHighestValue_byFleet - Refactor.R')
setwd("C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/")
source("initialisation_baltic.R")
source("B_Trajectories.R")
source("initialisation.R")
source("B_Trajectories.R")
switch (batch,
"0" = {params$plot.path = "C:/Users/Mark/Dropbox/GAP2_MSE Plugin2/North Sea MultiAnnual Plan/ResultsType1-4_220117/Plots/"}
#"0" = {params$plot.path = "C:/Users/Mark/Desktop/Test/"}
# "1" = {params$plot.path = "C:/Users/Mark/Dropbox/GAP2_MSE Plugin2/North Sea MultiAnnual Plan/ResultsType1-4_220117/Plots_strats_1-20/"},
# "2" = {params$plot.path = "C:/Users/Mark/Dropbox/GAP2_MSE Plugin2/North Sea MultiAnnual Plan/ResultsType1-4_220117/Plots_strats_21-40/"},
# "3" = {params$plot.path = "C:/Users/Mark/Dropbox/GAP2_MSE Plugin2/North Sea MultiAnnual Plan/ResultsType1-4_220117/Plots_strats_41-end/"}
)
source("initialisation.R")
source("B_Trajectories.R")
source("share_tools.R")
source("initialisation.R")
source("B_Trajectories.R")
source("F_Trajectories.R")
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/plotting 15July_2016_ChokeHighestValue_byFleet - Refactor.R')
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/plotting 15July_2016_ChokeHighestValue_byFleet - Refactor.R')
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/plotting 15July_2016_ChokeHighestValue_byFleet - Refactor.R')
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/plotting 15July_2016_ChokeHighestValue_byFleet - Refactor.R')
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/plotting 15July_2016_ChokeHighestValue_byFleet - Refactor.R')
source('~/.active-rstudio-document')
dir.path.landings
source('~/.active-rstudio-document')
head(landings)
head(quota)
1:10
1:10-1
1:(10-1)
source('~/.active-rstudio-document')
head(quota)
ncols(quota)
ncol(quota)
source('~/.active-rstudio-document')
landings
head(landings)
?reshape
names(landings)
names(landings)[1:5]
a=reshape(landings, names(landings)[1:5])
a=reshape(landings, names(landings)[1:5], direction="long")
a=reshape(landings, id=names(landings)[1:5])
names(landings)[1:5]
a=melt(landings, id=names(landings)[1:5])
a
head(a)
head(landings)
a=merge(landings, quota, by=names(landings)[1:5])
a
head(landings)
names(landings)
names(landings)[1:5]
names(quota)[1:5]
names(quota)[1:5] == names(landings)[1:5]
source('~/.active-rstudio-document')
combined
head(landings)
source('~/.active-rstudio-document')
combined
head(landings)
head(quota)
names(landings)[c(1:4,6)]
?melt
source('~/.active-rstudio-document')
names(landings)[c(1:4,6)]
landings = melt(landings, id = names(landings)[1:5], variable.name = "Landings")
landings
head(landings)
landings = LoadFile_ContainsListStrings(Dir.Path = dir.path.landings,
StringsInFileName = group_fleet_name)
quota = LoadFile_ContainsListStrings(Dir.Path = dir.path.quota,
StringsInFileName = group_fleet_name)
landings = rename_timesteps(dt = landings, colstart = 6, yearstart = 1)
quota = rename_timesteps(dt = quota, colstart = 6, yearstart = 1)
landings = melt(landings, id = names(landings)[1:5], variable.name = "Landings")
quota = melt(quota, id = names(quota)[1:5], variable.name = "Quota")
head(landings)
head(quota)
head(merge(landings, quota, by = names(landings)[c(1:4,6)]))
names(landings)[c(1:4,6)]
names(quota)[c(1:4,6)]
head(merge(landings, quota, by = names(landings)[c(1:4)]))
View(rename_timesteps)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
dt.landings
dt.quota
source('~/.active-rstudio-document')
dt.landings
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/Create_landings-quota_file.R')
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/Create_landings-quota_file.R')
LoadFile_ContainsListStrings(Dir.Path = path.landings,
StringsInFileName = group_fleet)
path.landings
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/Create_landings-quota_file.R')
dt.landings
path.landings
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/Create_landings-quota_file.R')
dt.landings
dt.landings
?melt
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/Create_landings-quota_file.R')
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/Create_landings-quota_file.R')
dt.quota
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/Create_landings-quota_file.R')
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/Create_landings-quota_file.R')
dt.landings
dt.quota
var.name
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/Create_landings-quota_file.R')
dt.landings
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/Create_landings-quota_file.R')
dt.landings
dt.quota
dt.landings = dt.landings[-ResultType]
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/Create_landings-quota_file.R')
dt.landings = dt.landings[-(ResultType)]
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/Create_landings-quota_file.R')
dt.landings = dt.landings[-("ResultType")]
dt.landings = dt.landings[,-(ResultType)]
dt.landings = dt.landings[,-ResultType]
dt.landings[,!ResultType]
dt.landings
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/Create_landings-quota_file.R')
dt.landings
dt.landings[,-ResultType]
dt.landings[,!ResultType]
dt.landings[,!ResultType, with=FALSE]
dt.landings[, !ResultType, with=FALSE]
dt.landings
dt.landings[, !c("ResultType"), with=FALSE]
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/Create_landings-quota_file.R')
dt.quota
dt.landings
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/Create_landings-quota_file.R')
dt.landings
merge(dt.landings, dt.quota)
dt.quota
source('C:/Users/Mark/Desktop/Desktop etc/GAP/MSE_Plugin_Results_Plotting/Create_landings-quota_file.R')
dt
write.csv(x = dt, file = "C:/Users/Mark/Desktop/test.csv")
